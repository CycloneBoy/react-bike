{"version":3,"sources":["serviceWorker.js","App.js","pages/login/index.js","utils/utils.js","axios/index.js","components/Header/index.js","common.js","pages/order/detail.js","config/menuConfig.js","components/NavLeft/index.js","components/Footer/index.js","admin.js","pages/home/index.js","pages/ui/gallery.js","pages/form/login.js","pages/form/register.js","pages/table/highTable.js","pages/table/basicTable.js","pages/city/index.js","components/BaseForm/index.js","pages/order/index.js","components/ETable/index.js","pages/user/index.js","router.js","index.js"],"names":["Boolean","window","location","hostname","match","App","react_default","a","createElement","this","props","children","React","Component","Login","card","Option","es_select","utils","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getOptionList","data","options","map","item","push","value","parseInt","id","key","name","getDomainUrl","document","toString","split","getDicValue","list","forEach","String","updateSelectedItem","selectedRowKeys","selectedRows","selectedIds","setState","selectedItem","getStateList","stateDic","state","getInterestList","interestDic","pagination","callback","onChange","current","page","pageSize","total","totalCount","showTotal","concat","showQuickJumper","showSizeChanger","getCityList","cityDic","carModeConfig","0","1","2","opModeConfig","authStatusConfig","getSelectOption","opList","index","value_","getOrderStatusList","orderStatusDic","Axios","Promise","resolve","reject","JsonP","url","param","err","response","status","console","error","isShowLoading","getElementById","style","display","axios","method","baseURL","timeout","params","then","res","code","modal","info","title","content","message","Header","_this2","username","setInterval","sysTime","Util","getTime","getWeatherApiData","_this3","jsonp","encodeURIComponent","results","weather_data","dayPictureUrl","weather","_this$props","menuName","menuType","className","row","col","span","src","alt","href","Common","src_components_Header","Detail","getDetailInfo","orderId","ajax","_this","orderInfo","Utils","mode","orderSn","bikeSn","userName","mobile","startLocation","endLocation","distance","menuList","icon","btnList","SubMenu","menu","NavLeft","currentKey","collapsed","renderMenu","type","Item","react_router_dom","to","homeHandleClick","menuTreeNode","MenuConfig","onClick","handleClick","theme","Footer","Admin","src_components_NavLeft","src_components_Footer","Home","Meta","Gallery","visible","currentImg","openGallery","imgSrc","imgList","marginBottom","cover","actions","avatar","description","gutter","md","width","height","onCancel","footer","FormItem","es_form","FormLogin","handleSubmit","e","preventDefault","userInfo","form","getFieldsValue","validateFields","values","log","success","password","remember","usernameError","passwordError","getFieldDecorator","layout","onSubmit","validateStatus","help","rules","required","input","prefix","color","placeholder","es_button","htmlType","marginTop","initialValue","min","max","pattern","RegExp","valuePropName","es_checkbox","float","login","create","RadioGroup","es_radio","Group","TextArea","FormRegister","JSON","stringify","getBase64","img","reader","FileReader","addEventListener","result","readAsDataURL","handleChange","file","originFileObj","imageUrl","userImg","loading","formItemLayout","labelCol","xs","sm","wrapperCol","offsetLayout","offset","register_FormItem","Object","assign","label","input_number","register_Option","es_switch","moment","date_picker","showTime","format","autosize","minRows","maxRows","time_picker","upload","listType","showUploadList","action","form_register","HighTable","request","assertThisInitialized","dataSource2","onRowClick","record","selectKey","interest","handleModify","confirm","onOk","handleDelete","filters","sorter","sortOrder","order","sex","birthday","address","dataSource","columns","dataIndex","b","render","text","size","table","bordered","BasicTable","rowSelection","rowCheckSelection","onRow","City","isShowOpenCity","handleOpenCity","cityInfo","cityForm","body","localeCompare","opMode","arr","join","city_FilterForm","city_OpenCityForm","wrappedComponentRef","inst","FilterForm","city_FormItem","city_Option","margin","OpenCityForm","handleFilterSubmit","fieldsValue","filterSubmit","reset","resetFields","initFormList","formList","formItemList","length","i","field","begin_time","BaseForm_FormItem","end_time","colon","INPUT","SELECT","CHECKBOX","BaseForm","Order","orderConfirmVisible","handleFilter","requestList","checkSelectItem","openOrderDetail","open","handleConfirm","orderConfirmVisble","handleFinishOrder","marginLeft","order_FormItem","battery","startTime","ETable","indexOf","splice","onSelectChange","onSelectAll","selected","changeRows","getOptions","p","name_list","订单编号","车辆编号","手机号码","用户姓名","密码","运维区域","车型","故障编号","代理商编码","角色ID","onSelect","row_selection","User","handleOperator","isVisible","userForm","objectSpread","isMarried","user_FormItem","ETable_ETable","bind","user_UserForm","UserForm","user_RadioGroup","Moment","rows","ERouter","src_App","react_router","path","component","common_Common","OrderDetail","admin","ReactDOM","router_ERouter","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.463a8be9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './style/common.less'\n\nclass App extends React.Component {\n  render() {\n    return (\n            <div>\n                {this.props.children}\n            </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport { Card} from \"antd\";\r\n\r\nexport default class Login extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <p>login</p>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\n","/**\r\n * 工具类\r\n */\r\nimport { Select} from \"antd\";\r\nimport React from \"react\";\r\nconst Option = Select.Option;\r\nexport default {\r\n    // 日期格式化\r\n    formateDate(time){\r\n        if(!time)return '';\r\n        let date = new Date(time);\r\n        return date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate()+' '+date.getHours()+':'+date.getMinutes()+':'+date.getSeconds();\r\n    },\r\n\r\n    // 通用表单查询\r\n    getOptionList(data){\r\n        if(!data){\r\n            return [];\r\n        }\r\n        let options = []; //[<Option value=\"0\" key=\"all_key\">全部</Option>];\r\n        data.map((item)=>{\r\n            options.push(<Option value={parseInt(item.id)} key={item.id}>{item.name}</Option>)\r\n        });\r\n        return options;\r\n    },\r\n\r\n    // 获取domainUrl\r\n    getDomainUrl(){\r\n        var url = document.location.toString();\r\n        var hostUrl = url.split(\"#\");\r\n        return hostUrl[0]\r\n    },\r\n\r\n    // 获取词典值\r\n    getDicValue(list,key){\r\n        var value;\r\n        list.forEach(function (item) {\r\n            if(item['id'] === String(key)) {\r\n                value =  item['name'];\r\n            }\r\n        });\r\n        return value\r\n    },\r\n\r\n    /**\r\n     * ETable 行点击通用函数\r\n     * @param {*选中行的索引} selectedRowKeys\r\n     * @param {*选中行对象} selectedItem\r\n     */\r\n    updateSelectedItem(selectedRowKeys, selectedRows, selectedIds) {\r\n        if (selectedIds) {\r\n            this.setState({\r\n                selectedRowKeys,\r\n                selectedIds: selectedIds,\r\n                selectedItem: selectedRows\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selectedRowKeys,\r\n                selectedItem: selectedRows\r\n            })\r\n        }\r\n    },\r\n\r\n    // 获取状态列表\r\n    getStateList(){\r\n        return  [\r\n            { id: '0', name: '保密' },\r\n            { id: '1', name: '工作' },\r\n            { id: '2', name: '学习' },\r\n            { id: '3', name: '休息' },\r\n            { id: '4', name: '旅行' },\r\n            { id: '5', name: '创业' },\r\n            { id: '6', name: '其它' },\r\n        ];\r\n    },\r\n\r\n    // 状态词典\r\n    stateDic(state){\r\n        return this.getDicValue(this.getStateList(),state);\r\n    },\r\n\r\n    // 获取状态列表\r\n    getInterestList(){\r\n        return  [\r\n            { id: '0', name: '骑行' },\r\n            { id: '1', name: '跑步' },\r\n            { id: '2', name: '打球' },\r\n            { id: '3', name: '玩游\"' },\r\n            { id: '4', name: '徒步' },\r\n            { id: '5', name: '创业' },\r\n            { id: '6', name: '看剧' },\r\n            { id: '7', name: '学习' },\r\n            { id: '8', name: '读书' },\r\n            { id: '9', name: '其他' },\r\n        ];\r\n    },\r\n\r\n    // 爱好词典\r\n    interestDic(state){\r\n        return this.getDicValue(this.getInterestList(),state);\r\n    },\r\n\r\n    // 表格分页封装\r\n    pagination(data,callback){\r\n        return{\r\n            onChange:(current)=>{\r\n                callback(current)\r\n            },\r\n            current:data.data.page,\r\n            pageSize:data.data.pageSize,\r\n            total:data.data.totalCount,\r\n            showTotal:()=>{\r\n                return `共${data.data.totalCount}条`\r\n            },\r\n            showQuickJumper:true,\r\n            showSizeChanger:true,\r\n        }\r\n    },\r\n\r\n    // 城市词典\r\n    getCityList(){\r\n        return  [\r\n            { id: '0', name: '全部' },\r\n            { id: '1', name: '北京' },\r\n            { id: '2', name: '天津' },\r\n            { id: '3', name: '深圳' },\r\n            { id: '4', name: '武汉' },\r\n            { id: '5', name: '长沙' },\r\n            { id: '6', name: '其他' }\r\n        ];\r\n    },\r\n\r\n    // 状态词典\r\n    cityDic(state){\r\n        return this.getDicValue(this.getCityList(),state);\r\n    },\r\n\r\n    // 用车模式词典\r\n    carModeConfig(state){\r\n        let config =  {\r\n            \"0\":\"全部\",\r\n            \"1\":\"指定停车点模式\",\r\n            \"2\":\"禁停区模式\",\r\n        };\r\n        return config[state]\r\n    },\r\n\r\n    // 营运模式词典\r\n    opModeConfig(state){\r\n        let config =  {\r\n            \"0\":\"全部\",\r\n            \"1\":\"自营\",\r\n            \"2\":\"加盟\",\r\n        };\r\n        return config[state]\r\n    },\r\n\r\n    // 加盟商授权状态词典\r\n    authStatusConfig(state){\r\n        let config =  {\r\n            \"0\":\"全部\",\r\n            \"1\":\"已授权\",\r\n            \"2\":\"未授权\",\r\n        };\r\n        return config[state]\r\n    },\r\n\r\n    getSelectOption(list){\r\n        let opList = []\r\n         list.map((item,index)=>{\r\n             opList.push( \"<Option value=\" + item.key+ \">\" + item.value_+\"</Option>\")\r\n        });\r\n        return opList;\r\n    },\r\n\r\n    // 订单状态\r\n    getOrderStatusList(){\r\n        return  [\r\n            { id: '0', name: '全部' },\r\n            { id: '1', name: '进行中' },\r\n            { id: '2', name: '结束行程' }\r\n            ];\r\n    },\r\n\r\n    // 订单状态词典\r\n    orderStatusDic(state){\r\n         return this.getDicValue(this.getOrderStatusList(),state);\r\n    },\r\n\r\n\r\n\r\n}","import JsonP from 'jsonp'\r\nimport axios from 'axios'\r\nimport { Modal } from 'antd'\r\n\r\nexport default class Axios {\r\n    static jsonp(options){\r\n        return new Promise((resolve, reject) =>{\r\n           JsonP(options.url, {\r\n               param: 'callback'\r\n           },function (err, response) {\r\n               if (response && response.status === 'success') {\r\n                   resolve(response);\r\n               } else {\r\n                   console.error(\"get data from jsonp error！\")\r\n                   reject(response);\r\n               }\r\n           })\r\n        } )\r\n    }\r\n\r\n    static ajax(options){\r\n        let loading;\r\n        if(options.data && options.data.isShowLoading !== false){\r\n            loading = document.getElementById('ajaxLoading');\r\n            loading.style.display = 'block';\r\n        }\r\n        let baseApi = 'https://easy-mock.com/mock/5cf380b5cfcb92308b8d04cd/react-bike';\r\n        return new Promise((resolve,reject) =>{\r\n            axios({\r\n                url: options.url,\r\n                method: options.method,\r\n                baseURL: baseApi,\r\n                timeout: 10000,\r\n                params: options.params || '',\r\n                data : options.data|| ''\r\n            }).then((response)=>{\r\n                if (options.data && options.data.isShowLoading !== false) {\r\n                    loading = document.getElementById('ajaxLoading');\r\n                    loading.style.display = 'none';\r\n                }\r\n                if (response !== null && response.status == '200'){\r\n                    // console.log(\"response:\" + response.data.result)\r\n                    let res = response.data;\r\n                    if (res.code == '0'){\r\n                        // console.log(\"result:\" + res.message)\r\n                        resolve(res);\r\n                    }else{\r\n                        Modal.info({\r\n                            title:\"提示\",\r\n                            content:res.message\r\n                        })\r\n                    }\r\n                }else{\r\n                    reject(response.data);\r\n                }\r\n            })\r\n        });\r\n    }\r\n}","import React from 'react'\r\nimport {Row,Col} from \"antd\";\r\nimport './index.less'\r\nimport Util from '../../utils/utils'\r\nimport axios from '../../axios'\r\n\r\nclass Header extends React.Component{\r\n    state={}\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            username :\"环球\"\r\n        })\r\n        setInterval( ()=>{\r\n            let sysTime = Util.formateDate(new Date().getTime());\r\n            this.setState( {\r\n                sysTime\r\n            })\r\n        }, 1000);\r\n        this.getWeatherApiData();\r\n    }\r\n\r\n    getWeatherApiData(){\r\n        let city = '深圳';\r\n        axios.jsonp({\r\n            url:'http://api.map.baidu.com/telematics/v3/weather?location='+encodeURIComponent(city)+'&output=json&ak=3p49MVra6urFRGOT9s8UBWr2'\r\n        }).then((res) =>{\r\n            let data = res.results[0].weather_data[0];\r\n            this.setState({\r\n                dayPictureUrl:data.dayPictureUrl,\r\n                weather:data.weather\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {menuName, menuType} = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"header\">\r\n                    <Row className=\"header-top\">\r\n                        {\r\n                            menuType? <Col span={6} className=\"logo\">\r\n                                <img src=\"/assets/logo-ant.svg\" alt=\"\"/>\r\n                                <span>CycloneBoy 通用管理系统</span>\r\n                            </Col>:''\r\n                        }\r\n                        <Col span={menuType?18:24}>\r\n                            <span>欢迎，{this.state.username}</span>\r\n                            <a href=\"#\">退出</a>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        menuType?'':\r\n                            <Row className=\"breadcrumb\">\r\n                                <Col span={4} className=\"breadcrumb-title\">\r\n                                    {menuName || '首页'}\r\n                                </Col>\r\n                                <Col span={20} className=\"weather\">\r\n                                    <span className=\"date\">{this.state.sysTime}</span>\r\n                                    <span className=\"weather-img\">\r\n                                    <img src={this.state.dayPictureUrl} alt=\"\" />\r\n                                </span>\r\n                                    <span className=\"weather-detail\">\r\n                                    {this.state.weather}\r\n                                </span>\r\n                                </Col>\r\n                            </Row>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport  default  Header;","import React from 'react';\r\nimport { Row } from 'antd';\r\nimport Header from './components/Header'\r\nimport './style/common.less'\r\n\r\nexport default class Common extends  React.Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row className=\"simple-page\">\r\n                    <Header menuType=\"second\"/>\r\n                </Row>\r\n                <Row className=\"content\">\r\n                    {this.props.children}\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport { Card} from 'antd'\r\nimport axios from '../../axios'\r\nimport Utils from '../../utils/utils'\r\nimport './detail.less'\r\n\r\nexport default class Detail extends React.Component{\r\n\r\n    state = {}\r\n\r\n    componentDidMount(){\r\n        let orderId = this.props.match.params.orderId;\r\n        if(orderId){\r\n            this.getDetailInfo(orderId);\r\n        }\r\n    }\r\n\r\n    getDetailInfo = (orderId)=>{\r\n        axios.ajax({\r\n            url:'/order/detail',\r\n            method:'GET',\r\n            params:{\r\n                orderId: orderId\r\n            },\r\n            data:{\r\n                isShowLoading:true\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code ==0){\r\n                this.setState({\r\n                    orderInfo:res.data\r\n                })\r\n                // this.renderMap(res.data);\r\n            }\r\n        })\r\n    };\r\n\r\n    render(){\r\n        const info = this.state.orderInfo || {};\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    {/*<div id=\"orderDetailMap\" className=\"order-map\"></div>*/}\r\n                    <div className=\"detail-items\">\r\n                        <div className=\"item-title\">基础信息</div>\r\n                        <ul className=\"detail-form\">\r\n                            <li>\r\n                                <div className=\"detail-form-left\">用车模式</div>\r\n                                <div className=\"detail-form-content\">{Utils.carModeConfig(info.mode)}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">订单编号</div>\r\n                                <div className=\"detail-form-content\">{info.orderSn}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">车辆编号</div>\r\n                                <div className=\"detail-form-content\">{info.bikeSn}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">用户姓名</div>\r\n                                <div className=\"detail-form-content\">{info.userName}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">手机号码</div>\r\n                                <div className=\"detail-form-content\">{info.mobile}</div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"detail-items\">\r\n                        <div className=\"item-title\">行驶轨迹</div>\r\n                        <ul className=\"detail-form\">\r\n                            <li>\r\n                                <div className=\"detail-form-left\">行程起点</div>\r\n                                <div className=\"detail-form-content\">{info.startLocation}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">行程终点</div>\r\n                                <div className=\"detail-form-content\">{info.endLocation}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">行驶里程</div>\r\n                                <div className=\"detail-form-content\">{info.distance/1000}公里</div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n","const menuList = [\n    {\n        title: '首页',\n        key: '/home',\n        icon: 'home',\n    },\n    {\n        title: 'UI',\n        key: '/ui',\n        icon: 'home',\n        children: [\n            {\n                title: '按钮',\n                key: '/ui/buttons',\n            },\n            {\n                title: '弹框',\n                key: '/ui/modals',\n            },\n            {\n                title: 'Loading',\n                key: '/ui/loadings',\n            },\n            {\n                title: '通知提醒',\n                key: '/ui/notification',\n            },\n            {\n                title: '全局Message',\n                key: '/ui/messages',\n            },\n            {\n                title: 'Tab页签',\n                key: '/ui/tabs',\n            },\n            {\n                title: '图片画廊',\n                key: '/ui/gallery',\n            },\n            {\n                title: '轮播图',\n                key: '/ui/carousel',\n            }\n        ]\n    },\n    {\n        title: '表单',\n        key: '/form',\n        icon: 'form',\n        children: [\n            {\n                title: '登录',\n                key: '/form/login',\n                icon: 'form',\n            },\n            {\n                title: '注册',\n                key: '/form/reg',\n                icon: 'home',\n            }\n        ]\n    },\n    {\n        title: '表格',\n        key: '/table',\n        icon: 'table',\n        children: [\n            {\n                title: '基础表格',\n                key: '/table/basic',\n            },\n            {\n                title: '高级表格',\n                key: '/table/high',\n            }\n        ]\n    },\n    {\n        title: '富文本',\n        key: '/rich',\n        icon: 'file-markdown',\n    },\n    {\n        title: '城市管理',\n        key: '/city',\n        icon: 'file-markdown',\n    },\n    {\n        title: '订单管理',\n        key: '/order',\n        icon: 'fire',\n        btnList: [\n            {\n                title: '订单详情',\n                key: 'detail'\n            },\n            {\n                title: '结束订单',\n                key: 'finish'\n            }\n        ]\n    },\n    {\n        title: '员工管理',\n        key: '/user',\n        icon: 'user'\n    },\n    {\n        title: '车辆地图',\n        key: '/bikeMap',\n        icon: 'fire',\n    },\n    {\n        title: '图标',\n        key: '/charts',\n        icon: 'instagram',\n        children: [\n            {\n                title: '柱形图',\n                key: '/charts/bar'\n            },\n            {\n                title: '饼图',\n                key: '/charts/pie'\n            },\n            {\n                title: '折线图',\n                key: '/charts/line'\n            },\n        ]\n    },\n    {\n        title: '权限设置',\n        key: '/permission',\n        icon: 'team',\n    },\n];\nexport default menuList;","import React from 'react'\r\nimport { Menu, Icon  } from 'antd';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport MenuConfig from '../../config/menuConfig'\r\nimport './index.less'\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nclass NavLeft extends React.Component {\r\n    state = {\r\n        currentKey: '',\r\n        collapsed: false,\r\n    };\r\n\r\n    componentWillMount() {\r\n        const menuTreeNode = this.renderMenu(MenuConfig);\r\n        this.setState( {\r\n            menuTreeNode\r\n        })\r\n    }\r\n\r\n    // 菜单渲染\r\n    renderMenu = (data) =>{\r\n        return data.map((item) =>{\r\n            if(item.children){\r\n                return (\r\n                    <SubMenu key={item.key} title={\r\n                        <span>\r\n                          <Icon type={item.icon} />\r\n                          <span>{item.title}</span>\r\n                        </span>\r\n                    }>\r\n                        { this.renderMenu(item.children)}\r\n                    </SubMenu>\r\n                )\r\n            }\r\n            return <Menu.Item key={item.key} title={item.title}>\r\n\r\n                <NavLink to={item.key}>\r\n                    <Icon type={item.icon}/>{item.title}\r\n                </NavLink>\r\n                {/*{item.title}*/}\r\n            </Menu.Item>\r\n\r\n        })\r\n    };\r\n\r\n    homeHandleClick = () =>{\r\n        // const {dispatch} = this.props;\r\n        // dispatch()\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavLink to=\"/home\" onClick={this.homeHandleClick}>\r\n                    <div className=\"logo\">\r\n                        <img src=\"/assets/logo-ant.svg\" alt=\"\"/>\r\n                        <h1>环球车队</h1>\r\n                        {/*<Button type=\"primary\" onClick={this.toggleCollapsed} style={{ marginBottom: 16 }}>*/}\r\n                            {/*<Icon type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'} />*/}\r\n                        {/*</Button>*/}\r\n                    </div>\r\n                </NavLink>\r\n                <Menu\r\n                    onClick={this.handleClick}\r\n                    theme=\"dark\"\r\n                    >\r\n                    {this.state.menuTreeNode}\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport  default  NavLeft;","import React from 'react'\r\nimport './index.less'\r\n\r\nclass Footer extends React.Component{\r\n\r\n    render() {\r\n        return <div className=\"footer\">\r\n            版权所有：环球车队&cycloneboy 技术支持：cycloneboy\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\nimport { Row,Col } from 'antd';\r\nimport NavLeft from  './components/NavLeft'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\n\r\nimport './style/common.less'\r\nclass Admin extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"container\">\r\n                <Col  span={4} className=\"nav-left\">\r\n                    <NavLeft/>\r\n                </Col>\r\n                <Col span={20} className=\"main\">\r\n                    <Header/>\r\n                    <Row className=\"content\">\r\n                         {/*<Home/>*/}\r\n                        {this.props.children}\r\n                    </Row>\r\n                    <Footer/>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Admin","import React from 'react';\r\nimport './index.less'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"home-wrap\">\r\n            欢迎来到环球车队后台管理系统\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport {Card, Row, Col, Modal,Icon, Avatar } from 'antd'\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default class Gallery extends  React.Component{\r\n\r\n    state = {\r\n        visible:false,\r\n        currentImg:''\r\n    };\r\n\r\n    openGallery = (imgSrc) =>{\r\n        this.setState({\r\n            visible: true,\r\n            currentImg: '/gallery/' + imgSrc\r\n        })\r\n    };\r\n\r\n    render() {\r\n        // TODO 从服务端获取图片地址和图片的信息\r\n        const imgs = [\r\n            ['1.png', '2.png', '3.png', '4.png', '5.png','6.png'],\r\n            [ '7.png', '8.png', '9.png', '10.png','11.png', '12.png'],\r\n            [ '13.png', '14.png', '15.png','16.png', '17.png', '18.png'],\r\n            [ '19.png', '20.png','21.png', '22.png', '23.png', '24.png'],\r\n        ];\r\n\r\n        const imgList = imgs.map((list) => list.map( (item) =>\r\n            <Card\r\n                style={{marginBottom:10}}\r\n                cover={\r\n                    <img\r\n                        src={'/gallery/' + item}\r\n                        onClick={() => this.openGallery(item)}\r\n                        alt=\"\"\r\n                    />\r\n                }\r\n                actions={\r\n                    [<Icon type=\"setting\" onClick={()=>{\r\n                        console.info(\"setting\");\r\n                    }}/>,\r\n                        <Icon type=\"edit\" onClick={()=>{\r\n                            console.info(\"edit\");\r\n                        }}/>,\r\n                        <Icon type=\"ellipsis\" onClick={()=>{\r\n                            console.info(\"ellipsis\");\r\n                        }}/>]\r\n                }\r\n            >\r\n            <Meta\r\n                avatar={<Avatar src={'/gallery/' + item} />}\r\n                title=\"cycloneboy\"\r\n                description=\"www.cycloneboy.cn\"/>\r\n            </Card>\r\n        ));\r\n        return (\r\n            <div className=\"card-wrap\">\r\n                <Row gutter={10}>\r\n                    {\r\n                         imgList.map((item) =>{\r\n                            return <Col md={6}>\r\n                                {item}\r\n                            </Col>\r\n                        })\r\n                    }\r\n                </Row>\r\n                <Modal\r\n                    width={300}\r\n                    height={500}\r\n                    visible={this.state.visible}\r\n                    title=\"图片画廊\"\r\n                    onCancel={ ()=>{\r\n                        this.setState({\r\n                                visible: false,\r\n                        })\r\n                    }}\r\n                    footer={null}\r\n                    >\r\n                    {<img src={this.state.currentImg} alt=\"\" style={{width:'100%'}}/>}\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport { Card, Form, Input, Button, message, Icon, Checkbox } from \"antd\";\r\nconst FormItem = Form.Item;\r\nclass  FormLogin extends React.Component{\r\n\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        this.props.form.validateFields();\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        let userInfo = this.props.form.getFieldsValue();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n                message.success(`${userInfo.username} 恭喜你，你输入的密码为：${userInfo.password} ,记住我：${userInfo.remember}`)\r\n            }\r\n        });\r\n    };\r\n    usernameError=\"\";\r\n    passwordError=\"\";\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div>\r\n                <Card title=\"登录行内表单\">\r\n                    <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n                        <Form.Item validateStatus={this.usernameError ? 'error' : ''} help={this.usernameError || ''}>\r\n                            {getFieldDecorator('username', {\r\n                                rules: [{ required: true, message: 'Please input your username!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder=\"请输入用户名\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item validateStatus={this.passwordError ? 'error' : ''} help={this.passwordError || ''}>\r\n                            {getFieldDecorator('password', {\r\n                                rules: [{ required: true, message: 'Please input your Password!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"请输入密码\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" >\r\n                                登录\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n                <Card title=\"登录水平表单\" style={{marginTop:10}}>\r\n                    <Form style={{width:500}}>\r\n                        <FormItem>\r\n                            {getFieldDecorator('username', {\r\n                                initialValue:'',\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: '用户名不能为空!'\r\n                                    },{\r\n                                        min:5,max:10,\r\n                                        message:'长度不在范围内'\r\n                                    },{\r\n                                        pattern:new RegExp('^\\\\w+$','g'),\r\n                                        message:'用户名必须为字母或者数字'\r\n                                    }\r\n                                    ],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder=\"请输入用户名\"\r\n                                />,\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {getFieldDecorator('password', {\r\n                                initialValue:'',\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: '密码不能为空!'\r\n                                    },{\r\n                                        min:5,max:10,\r\n                                        message:'长度不在范围内'\r\n                                    },{\r\n                                        pattern:new RegExp('^\\\\w+$','g'),\r\n                                        message:'密码必须为字母或者数字'\r\n                                    }\r\n                                ],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"lock\"  />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"请输入密码\"\r\n                                />,\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {getFieldDecorator('remember', {\r\n                                initialValue:true,\r\n                                valuePropName:'checkd'\r\n                            })(\r\n                                <Checkbox>记住密码</Checkbox>\r\n                            )}\r\n                            <a href=\"#\" style={{float:'right'}}>忘记密码？</a>\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button type=\"primary\" onClick={this.handleSubmit} >\r\n                                登录\r\n                            </Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Form.create()(FormLogin);\r\n\r\n","import React from 'react';\r\nimport {Card,Form,Button,Input,Checkbox,Radio,Select,Switch,DatePicker,TimePicker,Upload,Icon,message, InputNumber} from 'antd'\r\nimport moment from 'moment'\r\nconst FormItem = Form.Item;\r\nconst RadioGroup = Radio.Group;\r\nconst Option = Select.Option;\r\nconst TextArea = Input.TextArea;\r\nclass  FormRegister extends React.Component{\r\n\r\n    state={}\r\n\r\n    handleSubmit = ()=>{\r\n        let userInfo = this.props.form.getFieldsValue();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log(JSON.stringify(userInfo));\r\n                message.success(`${userInfo.username} 恭喜你，你输入的密码为：${userInfo.password} ,记住我：${userInfo.remember}`)\r\n            }\r\n        });\r\n    };\r\n\r\n    getBase64 = (img, callback)=>{\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load',()=> callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    handleChange = (info) =>{\r\n        if(info.file.status === 'uploading'){\r\n            this.setState({\r\n                loading:true\r\n            });\r\n            return;\r\n        } else if (info.file.status === 'done'){\r\n            this.getBase64(info.file.originFileObj, imageUrl => this.setState({\r\n                userImg:imageUrl,\r\n                loading:false,\r\n            }))\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol:{\r\n                xs:24,\r\n                sm:4\r\n            },\r\n            wrapperCol:{\r\n                xs:24,\r\n                sm:12\r\n            }\r\n        };\r\n        const offsetLayout = {\r\n            wrapperCol:{\r\n                xs:24,\r\n                sm:{\r\n                    span:12,\r\n                    offset:4\r\n                }\r\n            }\r\n        };\r\n        const rowObject = {\r\n            minRows:4, maxRows:6\r\n        }\r\n        return (\r\n            <div>\r\n                <Card title=\"注册表单\">\r\n                    <Form layout=\"horizontal\">\r\n                        <FormItem label=\"用户名\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('username', {\r\n                                initialValue:'',\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: '用户名不能为空!'\r\n                                    },{\r\n                                        min:5,max:10,\r\n                                        message:'长度不在范围内'\r\n                                    },{\r\n                                        pattern:new RegExp('^\\\\w+$','g'),\r\n                                        message:'用户名必须为字母或者数字'\r\n                                    }\r\n                                ],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder=\"请输入用户名\"\r\n                                />,\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem label=\"密码\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('password', {\r\n                                initialValue:'',\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: '密码不能为空!'\r\n                                    },{\r\n                                        min:5,max:10,\r\n                                        message:'长度不在范围内'\r\n                                    },{\r\n                                        pattern:new RegExp('^\\\\w+$','g'),\r\n                                        message:'密码必须为字母或者数字'\r\n                                    }\r\n                                ],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"lock\"  />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"请输入密码\"\r\n                                />,\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem label=\"性别\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('sex', {\r\n                                    initialValue:'1',\r\n                                })(\r\n                                    <RadioGroup>\r\n                                        <Radio value=\"1\">男</Radio>\r\n                                        <Radio value=\"2\">女</Radio>\r\n                                        <Radio value=\"3\">保密</Radio>\r\n                                    </RadioGroup>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem label=\"年龄\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('age', {\r\n                                    initialValue:18,\r\n                                })(\r\n                                    <InputNumber/>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem label=\"当前状态\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('state', {\r\n                                    initialValue:\"2\",\r\n                                })(\r\n                                    <Select>\r\n                                        <Option value=\"1\">工作</Option>\r\n                                        <Option value=\"2\">学习</Option>\r\n                                        <Option value=\"3\">休息</Option>\r\n                                        <Option value=\"4\">旅行</Option>\r\n                                        <Option value=\"5\">创业</Option>\r\n                                        <Option value=\"6\">其他</Option>\r\n                                    </Select>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem label=\"爱好\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('interest', {\r\n                                    initialValue:['2','4'],\r\n                                })(\r\n                                    <Select mode=\"multiple\">\r\n                                        <Option value=\"1\">骑行</Option>\r\n                                        <Option value=\"2\">跑步</Option>\r\n                                        <Option value=\"3\">打球</Option>\r\n                                        <Option value=\"4\">玩游戏</Option>\r\n                                        <Option value=\"5\">徒步</Option>\r\n                                        <Option value=\"6\">看剧</Option>\r\n                                        <Option value=\"7\">学习</Option>\r\n                                        <Option value=\"8\">读书</Option>\r\n                                        <Option value=\"9\">其他</Option>\r\n                                    </Select>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem label=\"是否已婚\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('isMarried', {\r\n                                    valuePropName:'checked',\r\n                                    initialValue: false\r\n                                })(\r\n                                    <Switch/>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem label=\"生日\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('birthday', {\r\n                                    initialValue: moment(\"2019-06-01\")\r\n                                })(\r\n                                    <DatePicker\r\n                                        showTime\r\n                                        format=\"YYYY-MM-DD HH:mm:ss\"/>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem label=\"联系地址\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('address', {\r\n                                    initialValue: '湖北省武汉市洪山区'\r\n                                })(\r\n                                    <TextArea\r\n                                        autosize={rowObject}/>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem label=\"早起时间\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('time')(\r\n                                    <TimePicker/>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem label=\"头像\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('userImg')(\r\n                                    <Upload\r\n                                        listType=\"picture-card\"\r\n                                        showUploadList={true}\r\n                                        action=\"//jsonplaceholder.typicode.com/\"\r\n                                        onChange={this.handleChange}\r\n                                    >\r\n                                        {this.state.userImg ? <img src={this.state.userImg}/>: <Icon type=\"plus\"/>}\r\n                                    </Upload>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem {...offsetLayout}>\r\n                            {getFieldDecorator('remember', {\r\n                                initialValue:false,\r\n                                valuePropName:'checked'\r\n                            })(\r\n                                <Checkbox>我已经阅读过\r\n                                    <a href='#'>环球车队协议</a>\r\n                                </Checkbox>\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem {...offsetLayout}>\r\n                            <Button type=\"primary\" onClick={this.handleSubmit} >\r\n                                注册\r\n                            </Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Form.create()(FormRegister);\r\n\r\n","import React from 'react';\r\nimport {Card, Table,Button, Modal,message} from \"antd\";\r\nimport axios from './../../axios/index'\r\nimport Utils from  './../../utils/utils'\r\n\r\nexport default class HighTable  extends React.Component{\r\n\r\n    state ={\r\n    };\r\n\r\n    params = {\r\n        page:1\r\n    };\r\n\r\n    componentDidMount() {\r\n        const data = [\r\n            {\r\n                id:'0',\r\n                userName:'Jack',\r\n                sex:'1',\r\n                state:'1',\r\n                interest:'1',\r\n                birthday:'2000-01-01',\r\n                address:'北京市海淀区奥林匹克公园',\r\n                time:'09:00'\r\n            },\r\n            {\r\n                id: '1',\r\n                userName: 'Tom',\r\n                sex: '1',\r\n                state: '1',\r\n                interest: '1',\r\n                birthday: '2000-01-01',\r\n                address: '北京市海淀区奥林匹克公园',\r\n                time: '09:00'\r\n            },\r\n            {\r\n                id: '2',\r\n                userName: 'Lily',\r\n                sex: '1',\r\n                state: '1',\r\n                interest: '1',\r\n                birthday: '2000-01-01',\r\n                address: '北京市海淀区奥林匹克公园',\r\n                time: '09:00'\r\n            },\r\n        ];\r\n        data.map((item,index)=>{\r\n            item.key = index;\r\n        });\r\n        this.setState({\r\n            dataSource :data\r\n        });\r\n        this.request();\r\n    }\r\n\r\n    request = ()=>{\r\n        let _this = this;\r\n        axios.ajax({\r\n            url:'/table/list',\r\n            method:'GET',\r\n            params:{\r\n                page:this.params.page\r\n            },\r\n            data:{\r\n                isShowLoading:true\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code == '0'){\r\n                console.info(\"getdata: \" + res.data);\r\n                res.data.result.map((item,index)=>{\r\n                    item.key = index;\r\n                });\r\n                this.setState({\r\n                    dataSource2:res.data.result,\r\n                    selectedRowKeys:[],\r\n                    selectedRows:null,\r\n                    pagination: Utils.pagination(res,(current)=>{\r\n                        _this.params.page = current;\r\n                        this.request();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    };\r\n\r\n    onRowClick = (record,index)=>{\r\n        let selectKey = [index];\r\n        Modal.info({\r\n            title:\"信息\",\r\n            content:`用户名：${record.userName},用户爱好：${record.interest}`\r\n        });\r\n        this.setState({\r\n            selectedRowKeys:selectKey,\r\n            selectedItem: record\r\n        })\r\n    };\r\n\r\n    handleModify =(item) =>{\r\n        let id = item.id;\r\n        Modal.confirm({\r\n            title:\"修改\",\r\n            content:\"你确认要修改此条数据吗？\",\r\n            onOk:()=>{\r\n                message.success('修改成功！')\r\n                this.request();\r\n            }\r\n        })\r\n    };\r\n\r\n    handleDelete =(item) =>{\r\n        let id = item.id;\r\n        Modal.confirm({\r\n            title:\"确认\",\r\n            content:\"你确认要删除此条数据吗？\",\r\n            onOk:()=>{\r\n                message.success('删除成功！')\r\n                this.request();\r\n            }\r\n        })\r\n    };\r\n\r\n    handleChange = (pagination, filters, sorter)=>{\r\n        console.log(\"::\" + sorter)\r\n        this.setState({\r\n            sortOrder:sorter.order\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const selectedRowKeys = this.state.selectedRowKeys;\r\n        const  rowSelection = {\r\n            type: 'radio',\r\n            selectedRowKeys\r\n        };\r\n\r\n        const rowCheckSelection = {\r\n            type: 'checkbox',\r\n            selectedRowKeys,\r\n            onChange: (selectedRowKeys, selectedRows) => {\r\n                console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n                this.setState({\r\n                    selectedRowKeys,\r\n                    selectedRows\r\n                })\r\n            },\r\n        };\r\n\r\n        const columns = [\r\n            {\r\n                title: 'id',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                sorter:(a,b)=>{\r\n                    return a.id - b.id;\r\n                },\r\n                sortOrder:this.state.sortOrder\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'userName',\r\n                key: 'userName',\r\n                sorter:(a,b)=>{\r\n                    return a.userName - b.userName;\r\n                },\r\n            },\r\n            {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                key: 'sex',\r\n                render(sex){\r\n                    return sex === 1?'男': (sex===2?'女':'保密')\r\n                },\r\n                sorter:(a,b)=>{\r\n                    return a.sex - b.sex;\r\n                },\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                key: 'state',\r\n                render(state){\r\n                    return Utils.stateDic(state);\r\n                }\r\n            },\r\n            {\r\n                title: '爱好',\r\n                dataIndex: 'interest',\r\n                key: 'state',\r\n                render(interest){\r\n                    return Utils.interestDic(interest);\r\n                }\r\n            },\r\n            {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                dataIndex: 'birthday'\r\n            },\r\n            {\r\n                title: '地址',\r\n                key: 'address',\r\n                dataIndex: 'address'\r\n            },\r\n            {\r\n                title: '早起时间',\r\n                key: 'time',\r\n                dataIndex: 'time'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text,item) => (\r\n                    <span>\r\n                        <Button size=\"small\" type=\"primary\" onClick={(item)=> {this.handleModify(item)}}>编辑</Button>\r\n                        <Button size=\"small\" type=\"danger\" onClick={(item)=> {this.handleDelete(item)}}>删除</Button>\r\n                     </span>\r\n                ),\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                <Card title=\"表格排序和操作按钮\" style={{marginTop:'10px'}}>\r\n                    <Table\r\n                        bordered\r\n                        dataSource={this.state.dataSource2}\r\n                        columns={columns}\r\n                        onChange={this.handleChange}\r\n                        pagination={this.state.pagination}/>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport {Card, Table, Modal} from \"antd\";\r\nimport axios from './../../axios/index'\r\nimport Utils from  './../../utils/utils'\r\n\r\nexport default class BasicTable  extends React.Component{\r\n\r\n    state ={\r\n        dataSource: [],\r\n        dataSource2: [],\r\n    };\r\n\r\n    params = {\r\n        page:1\r\n    };\r\n\r\n    componentDidMount() {\r\n        const data = [\r\n            {\r\n                id:'0',\r\n                userName:'Jack',\r\n                sex:'1',\r\n                state:'1',\r\n                interest:'1',\r\n                birthday:'2000-01-01',\r\n                address:'北京市海淀区奥林匹克公园',\r\n                time:'09:00'\r\n            },\r\n            {\r\n                id: '1',\r\n                userName: 'Tom',\r\n                sex: '1',\r\n                state: '1',\r\n                interest: '1',\r\n                birthday: '2000-01-01',\r\n                address: '北京市海淀区奥林匹克公园',\r\n                time: '09:00'\r\n            },\r\n            {\r\n                id: '2',\r\n                userName: 'Lily',\r\n                sex: '1',\r\n                state: '1',\r\n                interest: '1',\r\n                birthday: '2000-01-01',\r\n                address: '北京市海淀区奥林匹克公园',\r\n                time: '09:00'\r\n            },\r\n        ];\r\n        data.map((item,index)=>{\r\n            item.key = index;\r\n        });\r\n        this.setState({\r\n            dataSource :data\r\n        });\r\n        this.request();\r\n    }\r\n\r\n    request = ()=>{\r\n        let _this = this;\r\n        axios.ajax({\r\n            url:'/table/list',\r\n            method:'GET',\r\n            params:{\r\n                page:this.params.page\r\n            },\r\n            data:{\r\n                isShowLoading:true\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code == '0'){\r\n                console.info(\"getdata: \" + res.data);\r\n                res.data.result.map((item,index)=>{\r\n                    item.key = index;\r\n                });\r\n                this.setState({\r\n                    dataSource2:res.data.result,\r\n                    selectedRowKeys:[],\r\n                    selectedRows:null,\r\n                    pagination: Utils.pagination(res,(current)=>{\r\n                        _this.params.page = current;\r\n                        this.request();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    };\r\n\r\n    onRowClick = (record,index)=>{\r\n        let selectKey = [index];\r\n        Modal.info({\r\n            title:\"信息\",\r\n            content:`用户名：${record.userName},用户爱好：${record.interest}`\r\n        });\r\n        this.setState({\r\n            selectedRowKeys:selectKey,\r\n            selectedItem: record\r\n        })\r\n    };\r\n    render() {\r\n        const selectedRowKeys = this.state.selectedRowKeys;\r\n        const  rowSelection = {\r\n            type: 'radio',\r\n            selectedRowKeys\r\n        };\r\n\r\n        const rowCheckSelection = {\r\n            type: 'checkbox',\r\n            selectedRowKeys,\r\n            onChange: (selectedRowKeys, selectedRows) => {\r\n                console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n                this.setState({\r\n                    selectedRowKeys,\r\n                    selectedRows\r\n                })\r\n            },\r\n        };\r\n\r\n\r\n\r\n        const columns = [\r\n            {\r\n                title: 'id',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'userName',\r\n                key: 'userName',\r\n            },\r\n            {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                key: 'sex',\r\n                render(sex){\r\n                    return sex === 1?'男': (sex===2?'女':'保密')\r\n                }\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                key: 'state',\r\n                render(state){\r\n                    return Utils.stateDic(state);\r\n                }\r\n            },\r\n            {\r\n                title: '爱好',\r\n                dataIndex: 'interest',\r\n                key: 'state',\r\n                render(interest){\r\n                    return Utils.interestDic(interest);\r\n                }\r\n            },\r\n            {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                dataIndex: 'birthday'\r\n            },\r\n            {\r\n                title: '地址',\r\n                key: 'address',\r\n                dataIndex: 'address'\r\n            },\r\n            {\r\n                title: '早起时间',\r\n                key: 'time',\r\n                dataIndex: 'time'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: () => (\r\n                    <span>\r\n                         <a href=\"#\">修改</a>\r\n                        <a href=\"#\">删除</a>\r\n                     </span>\r\n                ),\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                <Card title=\"基础表格\">\r\n                    <Table\r\n                        rowSelection={rowSelection}\r\n                        dataSource={this.state.dataSource}\r\n                        columns={columns}\r\n                        pagination={false}/>\r\n                </Card>\r\n                <Card title=\"动态数据渲染基础表格\" style={{marginTop:'10px'}}>\r\n                    <Table\r\n                        bordered\r\n                        rowSelection={rowSelection}\r\n                        dataSource={this.state.dataSource2}\r\n                        columns={columns}\r\n                        pagination={false}/>\r\n                </Card>\r\n                <Card title=\"Mock单选\" style={{marginTop:'10px'}}>\r\n                    <Table\r\n                        bordered\r\n                        rowSelection={rowSelection}\r\n                        dataSource={this.state.dataSource2}\r\n                        columns={columns}\r\n                        onRow={(record,index)=>{\r\n                            return {\r\n                                onClick:()=>{\r\n                                    this.onRowClick(record,index);\r\n                                }\r\n                            }\r\n                        }}\r\n                        pagination={false}/>\r\n                </Card>\r\n                <Card title=\"Mock单选2\" style={{marginTop:'10px'}}>\r\n                    <Table\r\n                        bordered\r\n                        dataSource={this.state.dataSource2}\r\n                        columns={columns}\r\n                        rowSelection={rowCheckSelection}\r\n                        pagination={false}/>\r\n                </Card>\r\n                <Card title=\"Mock表格分页\" style={{marginTop:'10px'}}>\r\n                    <Table\r\n                        bordered\r\n                        dataSource={this.state.dataSource2}\r\n                        columns={columns}\r\n                        pagination={this.state.pagination}/>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport {Card,Button, Table, Form, Select, Modal, message} from \"antd\";\r\nimport axios from './../../axios/index'\r\nimport Utils from  './../../utils/utils'\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nexport default class City extends React.Component {\r\n\r\n    state ={\r\n        list:[],\r\n        isShowOpenCity:false\r\n    };\r\n\r\n    params = {\r\n        page:1\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.request()\r\n    }\r\n\r\n    // 默认请求我们的接口数据\r\n    request = ()=>{\r\n        let _this = this;\r\n        axios.ajax({\r\n            url:'/city',\r\n            method:'GET',\r\n            params:{\r\n                page:this.params.page\r\n            },\r\n            data:{\r\n                isShowLoading:true\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code == '0'){\r\n                console.info(\"getdata: \" + res.data);\r\n                let list = res.data.result.map((item,index)=>{\r\n                    item.key = index;\r\n                    return item;\r\n                });\r\n                this.setState({\r\n                    dataSource:list,\r\n                    pagination: Utils.pagination(res,(current)=>{\r\n                        _this.params.page = current;\r\n                        this.request();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    };\r\n\r\n    handleChange = (pagination, filters, sorter)=>{\r\n        console.log(\"::\" + sorter)\r\n        this.setState({\r\n            sortOrder:sorter.order\r\n        })\r\n    };\r\n\r\n    handleModify =(item) =>{\r\n        let id = item.id;\r\n        Modal.confirm({\r\n            title:\"修改\",\r\n            content:\"你确认要修改此条数据吗？\",\r\n            onOk:()=>{\r\n                message.success('修改成功！')\r\n                this.request();\r\n            }\r\n        })\r\n    };\r\n\r\n    handleDelete =(item) =>{\r\n        let id = item.id;\r\n        Modal.confirm({\r\n            title:\"确认\",\r\n            content:\"你确认要删除此条数据吗？\",\r\n            onOk:()=>{\r\n                message.success('删除成功！')\r\n                this.request();\r\n            }\r\n        })\r\n    };\r\n\r\n    handleOpenCity =()=>{\r\n        this.setState({\r\n            isShowOpenCity:true\r\n        })\r\n    };\r\n\r\n    // 城市开通提交\r\n    handleSubmit =()=>{\r\n        let cityInfo = this.cityForm.props.form.getFieldsValue();\r\n        console.log(cityInfo);\r\n        axios.ajax({\r\n            url:'/city/open',\r\n            method:'POST',\r\n            data:{\r\n                body:cityInfo\r\n            }\r\n        }).then((res)=> {\r\n            if (res.code == '0') {\r\n                message.success('开通成功');\r\n                this.setState({\r\n                    isShowOpenCity:false\r\n                })\r\n                this.request();\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title:'城市ID',\r\n                dataIndex:'id',\r\n                sorter:(a,b)=>{\r\n                    return a.id - b.id;\r\n                },\r\n            },\r\n            {\r\n                title: '城市名称',\r\n                dataIndex: 'name',\r\n                sorter:(a,b)=>{\r\n                    return a.name.localeCompare(b.name);\r\n                },\r\n            },\r\n            {\r\n                title: '用车模式',\r\n                dataIndex: 'mode',\r\n                render(mode){\r\n                    return mode ==1 ?'停车点':'禁停区';\r\n                },\r\n                sorter:(a,b)=>{\r\n                    return a.mode - b.mode;\r\n                },\r\n            }, {\r\n                title: '营运模式',\r\n                dataIndex: 'opMode',\r\n                render(opMode) {\r\n                    return opMode == 1 ? '自营' : (opMode == 2 ? '加盟' : '其他');\r\n                },\r\n                sorter:(a,b)=>{\r\n                    return a.opMode - b.opMode;\r\n                },\r\n            }, {\r\n                title: '授权加盟商',\r\n                dataIndex: 'franchiseeName'\r\n            }, {\r\n                title: '城市管理员',\r\n                dataIndex: 'cityAdmins',\r\n                render(arr){\r\n                    return arr.map((item)=>{\r\n                        return item.userName;\r\n                    }).join(',');\r\n                }\r\n            }, {\r\n                title: '城市开通时间',\r\n                dataIndex: 'openTime'\r\n            }, {\r\n                title: '操作时间',\r\n                dataIndex: 'updateTime',\r\n                render: Utils.formateDate\r\n            }, {\r\n                title: '操作人',\r\n                dataIndex: 'sysUserName'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text,item) => (\r\n                    <span>\r\n                        <Button size=\"small\" type=\"primary\" onClick={(item)=> {this.handleModify(item)}}>编辑</Button>\r\n                        <Button size=\"small\" type=\"danger\" onClick={(item)=> {this.handleDelete(item)}}>删除</Button>\r\n                     </span>\r\n                ),\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Card>\r\n                        <FilterForm />\r\n                    </Card>\r\n                    <Card style={{marginTop:10}}>\r\n                        <Button type=\"primary\" onClick={this.handleOpenCity}>开通城市</Button>\r\n                    </Card>\r\n                    <Table className=\"content-wrap\"\r\n                        bordered\r\n                        dataSource={this.state.dataSource}\r\n                        columns={columns}\r\n                        onChange={this.handleChange}\r\n                        pagination={this.state.pagination}/>\r\n                </div>\r\n                <Modal\r\n                    title=\"开通城市\"\r\n                    visible={this.state.isShowOpenCity}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            isShowOpenCity:false\r\n                        })\r\n                    }}\r\n                    onOk={this.handleSubmit}\r\n                    >\r\n                    <OpenCityForm wrappedComponentRef={(inst)=>{this.cityForm = inst;}}/>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass FilterForm extends React.Component{\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form layout=\"inline\">\r\n                <FormItem label=\"城市\">\r\n                    {\r\n                        getFieldDecorator('cityId')(\r\n                            <Select\r\n                                style={{width:100}}\r\n                                placeholder=\"全部\"\r\n                            >\r\n                                <Option value=\"0\">全部</Option>\r\n                                <Option value=\"1\">北京市</Option>\r\n                                <Option value=\"2\">天津市</Option>\r\n                                <Option value=\"3\">深圳市</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"用车模式\">\r\n                    {\r\n                        getFieldDecorator('mode')(\r\n                            <Select\r\n                                style={{ width: 120 }}\r\n                                placeholder=\"全部\"\r\n                            >\r\n\r\n                                <Option value=\"0\">全部</Option>\r\n                                <Option value=\"1\">指定停车点模式</Option>\r\n                                <Option value=\"2\">禁停区模式</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"营运模式\">\r\n                    {\r\n                        getFieldDecorator('opMode')(\r\n                            <Select\r\n                                style={{ width: 80 }}\r\n                                placeholder=\"全部\"\r\n                            >\r\n                                <Option value=\"0\">全部</Option>\r\n                                <Option value=\"1\">自营</Option>\r\n                                <Option value=\"2\">加盟</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"加盟商授权状态\">\r\n                    {\r\n                        getFieldDecorator('authStatus')(\r\n                            <Select\r\n                                style={{ width: 100 }}\r\n                                placeholder=\"全部\"\r\n                            >\r\n                                <Option value=\"0\">全部</Option>\r\n                                <Option value=\"1\">已授权</Option>\r\n                                <Option value=\"2\">未授权</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem>\r\n                    <Button type=\"primary\" style={{margin:'0 20px'}} >查询</Button>\r\n                    <Button>重置</Button>\r\n                </FormItem>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nFilterForm = Form.create({})(FilterForm);\r\n\r\nclass OpenCityForm extends React.Component{\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol:{\r\n                span:5\r\n            },\r\n            wrapperCol:{\r\n                span:19\r\n            }\r\n        }\r\n        const { getFieldDecorator }  =this.props.form;\r\n        return (\r\n            <Form layout=\"horizontal\">\r\n                <FormItem label=\"选择城市\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('cityId',{\r\n                            initialValue:'1'\r\n                        })(\r\n                            <Select style={{ width: 100 }}>\r\n                                <Option value=\"\">全部</Option>\r\n                                <Option value=\"1\">北京市</Option>\r\n                                <Option value=\"2\">天津市</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"营运模式\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('opMode', {\r\n                            initialValue: '1'\r\n                        })(\r\n                            <Select style={{ width: 100 }}>\r\n                                <Option value=\"1\">自营</Option>\r\n                                <Option value=\"2\">加盟</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"用车模式\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('useMode', {\r\n                            initialValue: '1'\r\n                        })(\r\n                            <Select style={{ width: 100 }}>\r\n                                <Option value=\"1\">指定停车点</Option>\r\n                                <Option value=\"2\">禁停区</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\nOpenCityForm = Form.create({})(OpenCityForm);","import React from 'react'\r\nimport { Input, Select, Form, Button, Checkbox, Radio, DatePicker} from 'antd'\r\nimport Utils from '../../utils/utils';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\n/**\r\n * 通用的过滤表格\r\n */\r\nclass FilterForm extends React.Component{\r\n\r\n    // 搜索过滤表格提交\r\n    handleFilterSubmit =()=>{\r\n        let fieldsValue = this.props.form.getFieldsValue();\r\n        this.props.filterSubmit(fieldsValue);\r\n    };\r\n\r\n    // 搜索过滤表格重置\r\n    reset = ()=>{\r\n        this.props.form.resetFields();\r\n    };\r\n\r\n    // 搜索过滤表格初始化\r\n    initFormList = ()=>{\r\n        const  { getFieldDecorator } = this.props.form;\r\n        const formList = this.props.formList;\r\n        const formItemList = [];\r\n        if(formList && formList.length > 0){\r\n            formList.forEach((item,i)=>{\r\n                let label = item.label;\r\n                let field = item.field;\r\n                let initialValue = item.initialValue || '';\r\n                let placeholder = item.placeholder;\r\n                let width = item.width;\r\n                switch (item.type) {\r\n                    case '时间查询':{\r\n                        const begin_time = <FormItem label={label} key={field+\"1\"}>\r\n                            {\r\n                                getFieldDecorator('beginTime')(\r\n                                    <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\"/>\r\n                                )\r\n                            }\r\n                        </FormItem>;\r\n                        formItemList.push(begin_time)\r\n                        const end_time = <FormItem label=\"~\" colon={false} key={field+\"2\"}>\r\n                            {\r\n                                getFieldDecorator('endTime')(\r\n                                    <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\" />\r\n                                )\r\n                            }\r\n                        </FormItem>;\r\n                        formItemList.push(end_time)\r\n                    }\r\n                        break;\r\n                    case 'INPUT':{\r\n                        const INPUT = <FormItem label={label} key={field}>\r\n                            {\r\n                                getFieldDecorator([field],{\r\n                                    initialValue: initialValue\r\n                                })(\r\n                                    <Input type=\"text\" placeholder={placeholder} />\r\n                                )\r\n                            }\r\n                        </FormItem>;\r\n                        formItemList.push(INPUT);\r\n\r\n                    }\r\n                        break;\r\n                    case 'SELECT':{\r\n                        const SELECT = <FormItem label={label} key={field}>\r\n                            {\r\n                                getFieldDecorator([field], {\r\n                                    initialValue: initialValue\r\n                                })(\r\n                                    <Select\r\n                                        style={{ width: width }}\r\n                                        placeholder={placeholder}\r\n                                    >\r\n                                        {Utils.getOptionList(item.list)}\r\n                                    </Select>\r\n                                )\r\n                            }\r\n                        </FormItem>;\r\n                        formItemList.push(SELECT);\r\n                    }\r\n                    break;\r\n                    case 'CHECKBOX':{\r\n                        const CHECKBOX = <FormItem label={label} key={field}>\r\n                            {\r\n                                getFieldDecorator([field], {\r\n                                    valuePropName: 'checked',\r\n                                    initialValue: initialValue //true | false\r\n                                })(\r\n                                    <Checkbox>\r\n                                        {label}\r\n                                    </Checkbox>\r\n                                )\r\n                            }\r\n                        </FormItem>;\r\n                        formItemList.push(CHECKBOX);\r\n                    }\r\n                        break;\r\n                    default:{\r\n\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return formItemList\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Form layout=\"inline\">\r\n                { this.initFormList() }\r\n                <FormItem>\r\n                    <Button type=\"primary\" style={{ margin: '0 20px' }} onClick={this.handleFilterSubmit}>查询</Button>\r\n                    <Button onClick={this.reset}>重置</Button>\r\n                </FormItem>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create({})(FilterForm);","import React from 'react';\r\nimport { Card, Button, Table, Form, Select, Modal, DatePicker, message} from 'antd'\r\nimport axios from '../../axios'\r\nimport Utils from '../../utils/utils'\r\nimport BaseForm from '../../components/BaseForm'\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nexport default class Order extends React.Component{\r\n\r\n    state  = {\r\n        orderInfo:{},\r\n        orderConfirmVisible:false\r\n    };\r\n\r\n    params = {\r\n        page: 1\r\n    };\r\n    formList = [\r\n        {\r\n            type:'SELECT',\r\n            label:'城市',\r\n            field:'city',\r\n            placeholder:'全部',\r\n            initialValue:'1',\r\n            width:80,\r\n            list: Utils.getCityList()\r\n        },\r\n        {\r\n            type: '时间查询',\r\n            label:\"开始时间\"\r\n        },\r\n        {\r\n            type: 'SELECT',\r\n            label: '订单状态',\r\n            field:'orderStatus',\r\n            placeholder: '全部',\r\n            initialValue: '1',\r\n            width: 80,\r\n            list: Utils.getOrderStatusList()\r\n        }\r\n    ];\r\n\r\n    componentDidMount(){\r\n        this.requestList()\r\n    }\r\n\r\n    handleFilter = (params)=>{\r\n        this.params = params;\r\n        this.requestList();\r\n    };\r\n\r\n    // 默认请求我们的接口数据\r\n    requestList = ()=>{\r\n        let _this = this;\r\n        axios.ajax({\r\n            url:'/order',\r\n            method:'GET',\r\n            params:{\r\n                page:this.params\r\n            },\r\n            data:{\r\n                isShowLoading:true\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code == '0'){\r\n                let list = res.data.result.map((item,index)=>{\r\n                    item.key = index;\r\n                    return item;\r\n                });\r\n                this.setState({\r\n                    list,\r\n                    pagination: Utils.pagination(res,(current,pageSize)=>{\r\n                        _this.params.page = current;\r\n                        _this.params.pageSize = pageSize;\r\n                        this.requestList();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    };\r\n\r\n    // 返回选中的一行\r\n    checkSelectItem =()=>{\r\n        let item = this.state.selectedItem;\r\n        if (!item) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请先选择一条订单'\r\n            });\r\n            return;\r\n        }\r\n        return item;\r\n    };\r\n\r\n    // 打开订单详情页面\r\n    openOrderDetail = ()=>{\r\n        let item = this.state.selectedItem;\r\n        if (!item) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请先选择一条订单'\r\n            });\r\n            return;\r\n        };\r\n        window.open(Utils.getDomainUrl() + `#/common/order/detail/${item.id}`,'_blank')\r\n    };\r\n\r\n    // 订单结束确认\r\n    handleConfirm = ()=>{\r\n        let item = this.state.selectedItem;\r\n        if (!item) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请先选择一条订单'\r\n            });\r\n            return;\r\n        };\r\n        axios.ajax({\r\n            url:'/order/stop',\r\n            method:'PUT',\r\n            data:{\r\n                orderId: item.id\r\n            }\r\n        }).then((res)=> {\r\n            if (res.code == '0') {\r\n                this.setState({\r\n                    orderInfo:res.data,\r\n                    orderConfirmVisble: true\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    // 结束订单\r\n    handleFinishOrder = ()=>{\r\n        let item = this.state.selectedItem;\r\n        axios.ajax({\r\n            url: '/order/finishorder',\r\n            method:'PUT',\r\n            data:{\r\n                orderId: item.id\r\n            }\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                    message.success('订单结束成功')\r\n                this.setState({\r\n                    orderConfirmVisble: false\r\n                })\r\n                this.requestList();\r\n            }\r\n        })\r\n    }\r\n\r\n    onRowClick = (record, index) => {\r\n        let selectKey = [index];\r\n        this.setState({\r\n            selectedRowKeys: selectKey,\r\n            selectedItem: record\r\n        });\r\n    };\r\n\r\n    handleModify =(item) =>{\r\n        let id = item.id;\r\n        Modal.confirm({\r\n            title:\"修改\",\r\n            content:\"你确认要修改此条数据吗？\",\r\n            onOk:()=>{\r\n                message.success('修改成功！');\r\n                this.requestList();\r\n            }\r\n        })\r\n    };\r\n\r\n    handleDelete =(item) =>{\r\n        let id = item.id;\r\n        Modal.confirm({\r\n            title:\"确认\",\r\n            content:\"你确认要删除此条数据吗？\",\r\n            onOk:()=>{\r\n                message.success('删除成功！');\r\n                this.requestList();\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title:'订单编号',\r\n                dataIndex:'orderSn'\r\n            },\r\n            {\r\n                title: '车辆编号',\r\n                dataIndex: 'bikeSn'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'userName'\r\n            },\r\n            {\r\n                title: '手机号',\r\n                dataIndex: 'mobile'\r\n            },\r\n            {\r\n                title: '里程',\r\n                dataIndex: 'distance',\r\n                render(distance){\r\n                    return distance/1000 + 'Km';\r\n                }\r\n            },\r\n            {\r\n                title: '行驶时长',\r\n                dataIndex: 'totalTime'\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'status',\r\n                render(value){\r\n                    return Utils.orderStatusDic(value);\r\n                }\r\n            },\r\n            {\r\n                title: '开始时间',\r\n                dataIndex: 'startTime'\r\n            },\r\n            {\r\n                title: '结束时间',\r\n                dataIndex: 'endTime'\r\n            },\r\n            {\r\n                title: '订单金额',\r\n                dataIndex: 'totalFee'\r\n            },\r\n            {\r\n                title: '实付金额',\r\n                dataIndex: 'userPay'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text,item) => (\r\n                    <span>\r\n                        <Button size=\"small\" type=\"primary\" onClick={(item)=> {this.handleModify(item)}}>编辑</Button>\r\n                        <Button size=\"small\" type=\"danger\" onClick={(item)=> {this.handleDelete(item)}}>删除</Button>\r\n                     </span>\r\n                ),\r\n            },\r\n        ];\r\n\r\n        const formItemLayout = {\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:19}\r\n        };\r\n        const selectedRowKeys = this.state.selectedRowKeys;\r\n        const rowSelection = {\r\n            type: 'radio',\r\n            selectedRowKeys\r\n        };\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <BaseForm formList={this.formList} filterSubmit={this.handleFilter}/>\r\n                </Card>\r\n                <Card style={{marginTop:10}}>\r\n                    <Button type=\"primary\" onClick={this.openOrderDetail}>订单详情</Button>\r\n                    <Button type=\"primary\" style={{marginLeft:10}} onClick={this.handleConfirm}>结束订单</Button>\r\n                </Card>\r\n                <div className=\"content-wrap\">\r\n                    <Table\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        pagination={this.state.pagination}\r\n                        rowSelection={rowSelection}\r\n                        onRow={(record, index) => {\r\n                            return {\r\n                                onClick: () => {\r\n                                    this.onRowClick(record, index);\r\n                                }\r\n                            };\r\n                        }}\r\n                    />\r\n                </div>\r\n                <Modal\r\n                    title=\"结束订单\"\r\n                    visible={this.state.orderConfirmVisble}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            orderConfirmVisble:false\r\n                        })\r\n                    }}\r\n                    onOk={this.handleFinishOrder}\r\n                    width={600}\r\n                >\r\n                    <Form layout=\"horizontal\">\r\n                        <FormItem label=\"车辆编号\" {...formItemLayout}>\r\n                            {this.state.orderInfo.bikeSn}\r\n                        </FormItem>\r\n                        <FormItem label=\"剩余电量\" {...formItemLayout}>\r\n                            {this.state.orderInfo.battery + '%'}\r\n                        </FormItem>\r\n                        <FormItem label=\"行程开始时间\" {...formItemLayout}>\r\n                            {this.state.orderInfo.startTime}\r\n                        </FormItem>\r\n                        <FormItem label=\"当前位置\" {...formItemLayout}>\r\n                            {this.state.orderInfo.location}\r\n                        </FormItem>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Utils from '../../utils/utils'\r\nimport {Table} from 'antd'\r\nimport  \"./index.less\"\r\nexport default class ETable extends React.Component {\r\n\r\n    state = {}\r\n    //处理行点击事件\r\n    onRowClick = (record, index) => {\r\n        let rowSelection = this.props.rowSelection;\r\n        if(rowSelection == 'checkbox'){\r\n            let selectedRowKeys = this.props.selectedRowKeys;\r\n            let selectedIds = this.props.selectedIds;\r\n            let selectedItem = this.props.selectedItem || [];\r\n            if (selectedIds) {\r\n                const i = selectedIds.indexOf(record.id);\r\n                if (i == -1) {//避免重复添加\r\n                    selectedIds.push(record.id)\r\n                    selectedRowKeys.push(index);\r\n                    selectedItem.push(record);\r\n                }else{\r\n                    selectedIds.splice(i,1);\r\n                    selectedRowKeys.splice(i,1);\r\n                    selectedItem.splice(i,1);\r\n                }\r\n            } else {\r\n                selectedIds = [record.id];\r\n                selectedRowKeys = [index]\r\n                selectedItem = [record];\r\n            }\r\n            this.props.updateSelectedItem(selectedRowKeys,selectedItem || {},selectedIds);\r\n        }else{\r\n            let selectKey = [index];\r\n            const selectedRowKeys = this.props.selectedRowKeys;\r\n            if (selectedRowKeys && selectedRowKeys[0] == index){\r\n                return;\r\n            }\r\n            this.props.updateSelectedItem(selectKey,record || {});\r\n        }\r\n    };\r\n\r\n    // 选择框变更\r\n    onSelectChange = (selectedRowKeys, selectedRows) => {\r\n        let rowSelection = this.props.rowSelection;\r\n        const selectedIds = [];\r\n        if(rowSelection == 'checkbox'){\r\n            selectedRows.map((item)=>{\r\n                selectedIds.push(item.id);\r\n            });\r\n            this.setState({\r\n                selectedRowKeys,\r\n                selectedIds:selectedIds,\r\n                selectedItem: selectedRows[0]\r\n            });\r\n        }\r\n        this.props.updateSelectedItem(selectedRowKeys,selectedRows[0],selectedIds);\r\n    };\r\n\r\n    onSelectAll = (selected, selectedRows, changeRows) => {\r\n        let selectedIds = [];\r\n        let selectKey = [];\r\n        selectedRows.forEach((item,i)=> {\r\n            selectedIds.push(item.id);\r\n            selectKey.push(i);\r\n        });\r\n        this.props.updateSelectedItem(selectKey,selectedRows[0] || {},selectedIds);\r\n    }\r\n\r\n    getOptions = () => {\r\n        let p = this.props;\r\n        const name_list = {\r\n            \"订单编号\":170,\r\n            \"车辆编号\":80,\r\n            \"手机号码\":96,\r\n            \"用户姓名\":70,\r\n            \"密码\":70,\r\n            \"运维区域\":300,\r\n            \"车型\":42,\r\n            \"故障编号\":76,\r\n            \"代理商编码\":97,\r\n            \"角色ID\":64\r\n        };\r\n        if (p.columns && p.columns.length > 0) {\r\n            p.columns.forEach((item)=> {\r\n                //开始/结束 时间\r\n                if(!item.title){\r\n                    return\r\n                }\r\n                if(!item.width){\r\n                    if(item.title.indexOf(\"时间\") > -1 && item.title.indexOf(\"持续时间\") < 0){\r\n                        item.width = 132\r\n                    }else if(item.title.indexOf(\"图片\") > -1){\r\n                        item.width = 86\r\n                    }else if(item.title.indexOf(\"权限\") > -1 || item.title.indexOf(\"负责城市\") > -1){\r\n                        item.width = '40%';\r\n                        item.className = \"text-left\";\r\n                    }else{\r\n                        if(name_list[item.title]){\r\n                            item.width = name_list[item.title];\r\n                        }\r\n                    }\r\n                }\r\n                item.bordered = true;\r\n            });\r\n        }\r\n        const { selectedRowKeys } = this.props;\r\n        const rowSelection = {\r\n            type: 'radio',\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            onSelect:(record, selected, selectedRows)=>{\r\n                console.log('...')\r\n            },\r\n            onSelectAll:this.onSelectAll\r\n        };\r\n        let row_selection = this.props.rowSelection;\r\n        // 当属性未false或者null时，说明没有单选或者复选列\r\n        if(row_selection===false || row_selection === null){\r\n            row_selection = false;\r\n        }else if(row_selection == 'checkbox'){\r\n            //设置类型未复选框\r\n            rowSelection.type = 'checkbox';\r\n        }else{\r\n            //默认未单选\r\n            row_selection = 'radio';\r\n        }\r\n        return <Table\r\n            className=\"card-wrap page-table\"\r\n            bordered\r\n            {...this.props}\r\n            rowSelection={row_selection?rowSelection:null}\r\n            onRow={(record,index) => ({\r\n                onClick: ()=>{\r\n                    if(!row_selection){\r\n                        return;\r\n                    }\r\n                    this.onRowClick(record,index)\r\n                }\r\n            })}\r\n        />\r\n    };\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                {this.getOptions()}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Card, Button, Table, Form, Input, Checkbox,Select,Radio, Icon, message, Modal, DatePicker } from 'antd'\r\nimport axios from '../../axios'\r\nimport Utils from '../../utils/utils'\r\nimport ETable from '../../components/ETable'\r\nimport Moment from 'moment'\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst RadioGroup = Radio.Group;\r\nexport default class User extends React.Component{\r\n\r\n    state = {\r\n        list:[]\r\n    };\r\n\r\n    params = {\r\n        page:1\r\n    };\r\n\r\n    // 默认请求我们的接口数据\r\n    requestList = ()=>{\r\n        let _this = this;\r\n        axios.ajax({\r\n            url:'/user',\r\n            method:'GET',\r\n            params:{\r\n                page:this.params\r\n            },\r\n            data:{\r\n                isShowLoading:true\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code == '0'){\r\n                let list = res.data.result.map((item,index)=>{\r\n                    item.key = index;\r\n                    return item;\r\n                });\r\n                this.setState({\r\n                    list,\r\n                    pagination: Utils.pagination(res,(current,pageSize)=>{\r\n                        _this.params.page = current;\r\n                        _this.params.pageSize = pageSize;\r\n                        this.requestList();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.requestList();\r\n    }\r\n\r\n    // 操作员工\r\n    handleOperator = (type)=>{\r\n        let item = this.state.selectedItem;\r\n        switch (type) {\r\n            case 'create':{\r\n                this.setState({\r\n                    title:'创建员工',\r\n                    isVisible:true,\r\n                    type\r\n                });\r\n                break;\r\n            }\r\n            case \"edit\":\r\n            case \"detail\":{\r\n                if(!item){\r\n                    Modal.info({\r\n                        title: '信息',\r\n                        content: '请选择一个用户'\r\n                    });\r\n                    return;\r\n                }\r\n                this.setState({\r\n                    title:type=='edit'?'编辑用户':'查看详情',\r\n                    isVisible:true,\r\n                    userInfo:item,\r\n                    type\r\n                });\r\n                break;\r\n            }\r\n            case \"delete\":{\r\n                if(!item){\r\n                    Modal.info({\r\n                        title: '信息',\r\n                        content: '请选择一个用户'\r\n                    });\r\n                    return;\r\n                }\r\n                Modal.confirm({\r\n                    title:'删除',\r\n                    content:'确定要删除此用户吗？',\r\n                    onOk:()=>{\r\n                        axios.ajax({\r\n                            url:'/user/delete',\r\n                            method:'DELETE',\r\n                            data:{\r\n                                id:item.id\r\n                            }\r\n                        }).then((res)=>{\r\n                            if(res.code ==0){\r\n                                message.success('删除操作成功' )\r\n                                this.setState({\r\n                                    isVisible:false\r\n                                })\r\n                                this.requestList();\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n                break;\r\n            }\r\n            default:\r\n\r\n        }\r\n    };\r\n\r\n    handleSubmit = ()=>{\r\n        let type = this.state.type;\r\n        let data = this.userForm.props.form.getFieldsValue();\r\n        console.log(\"data:\" + data)\r\n        axios.ajax({\r\n            url:type == 'create'?'/user/add':'/user/edit',\r\n            method:type == 'create'?'POST':'PUT',\r\n            data:{\r\n                ...data\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code ==0){\r\n                message.success(type == 'create'?'新增操作成功':'修改操作成功' )\r\n                this.setState({\r\n                    isVisible:false\r\n                })\r\n                this.requestList();\r\n            }\r\n        })\r\n    }\r\n\r\n    handleModify =(item) =>{\r\n        let id = item.id;\r\n        Modal.confirm({\r\n            title:\"修改\",\r\n            content:\"你确认要修改此条数据吗？\",\r\n            onOk:()=>{\r\n                message.success('修改成功！');\r\n                this.requestList();\r\n            }\r\n        })\r\n    };\r\n\r\n    handleDelete =(item) =>{\r\n        let id = item.id;\r\n        Modal.confirm({\r\n            title:\"确认\",\r\n            content:\"你确认要删除此条数据吗？\",\r\n            onOk:()=>{\r\n                message.success('删除成功！');\r\n                this.requestList();\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: 'id',\r\n                dataIndex: 'id'\r\n            }, {\r\n                title: '用户名',\r\n                dataIndex: 'username'\r\n            }, {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                render(sex){\r\n                    return sex ==1 ?'男':'女'\r\n                }\r\n            }, {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                render(state){\r\n                    return Utils.stateDic(state);\r\n                }\r\n            },{\r\n                title: '爱好',\r\n                dataIndex: 'interest',\r\n                render(interest){\r\n                    return Utils.interestDic(interest);\r\n                }\r\n            },{\r\n                title: '婚姻',\r\n                dataIndex: 'isMarried',\r\n                render(isMarried){\r\n                    return isMarried?'已婚':'未婚'\r\n                }\r\n            },{\r\n                title: '生日',\r\n                dataIndex: 'birthday'\r\n            },{\r\n                title: '联系地址',\r\n                dataIndex: 'address'\r\n            },{\r\n                title: '早起时间',\r\n                dataIndex: 'time'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text,item) => (\r\n                    <span>\r\n                        <Button size=\"small\" type=\"primary\" onClick={(item)=> {this.handleModify(item)}}>编辑</Button>\r\n                        <Button size=\"small\" type=\"danger\" onClick={(item)=> {this.handleDelete(item)}}>删除</Button>\r\n                     </span>\r\n                ),\r\n            },\r\n        ];\r\n        return(\r\n            <div>\r\n                <Card>\r\n                    <Form layout=\"inline\">\r\n                        <FormItem>\r\n                            <Input  placeholder=\"请输入用户名\"/>\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Input type=\"password\" placeholder=\"请输入密码\"/>\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button type=\"primary\">登 录</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n                <Card style={{marginTop:10}}>\r\n                    <Button type=\"primary\" icon=\"plus\" onClick={()=>this.handleOperator('create')}>创建员工</Button>\r\n                    <Button icon=\"edit\" onClick={()=>this.handleOperator('edit')}>编辑员工</Button>\r\n                    <Button onClick={()=>this.handleOperator('detail')}>员工详情</Button>\r\n                    <Button type=\"danger\" icon=\"delete\" onClick={()=>this.handleOperator('delete')}>删除员工</Button>\r\n                </Card>\r\n                <div className=\"content-wrap\">\r\n                    <ETable\r\n                        columns={columns}\r\n                        updateSelectedItem={Utils.updateSelectedItem.bind(this)}\r\n                        selectedRowKeys={this.state.selectedRowKeys}\r\n                        dataSource={this.state.list}\r\n                        pagination={this.state.pagination}\r\n                    />\r\n                </div>\r\n                <Modal\r\n                    title={this.state.title}\r\n                    visible={this.state.isVisible}\r\n                    onOk={this.handleSubmit}\r\n                    width={800}\r\n                    onCancel={()=>{\r\n                        this.userForm.props.form.resetFields();\r\n                        this.setState({\r\n                            isVisible:false,\r\n                            userInfo:''\r\n                        })\r\n                    }}\r\n                >\r\n                    <UserForm userInfo={this.state.userInfo} type={this.state.type} wrappedComponentRef={(inst) => this.userForm = inst }/>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass UserForm extends React.Component{\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: {span: 5},\r\n            wrapperCol: {span: 16}\r\n        };\r\n        const userInfo = this.props.userInfo || {};\r\n        const type = this.props.type;\r\n        return (\r\n            <Form layout=\"horizontal\">\r\n                <FormItem label=\"姓名\" {...formItemLayout}>\r\n                    {\r\n                        userInfo && type=='detail'?userInfo.username:\r\n                            getFieldDecorator('username',{\r\n                                initialValue:userInfo.username\r\n                            })(\r\n                                <Input type=\"text\" placeholder=\"请输入姓名\"/>\r\n                            )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"性别\" {...formItemLayout}>\r\n                    {\r\n                        userInfo && type=='detail'?userInfo.sex==1?'男':'女':\r\n                            getFieldDecorator('sex',{\r\n                                initialValue:userInfo.sex\r\n                            })(\r\n                                <RadioGroup>\r\n                                    <Radio value={1}>男</Radio>\r\n                                    <Radio value={2}>女</Radio>\r\n                                </RadioGroup>\r\n                            )}\r\n                </FormItem>\r\n                <FormItem label=\"状态\" {...formItemLayout}>\r\n                    {\r\n                        userInfo && type=='detail'?Utils.stateDic(userInfo.state):\r\n                            getFieldDecorator('state',{\r\n                                initialValue:userInfo.state\r\n                            })(\r\n                                <Select>\r\n                                    {Utils.getOptionList(Utils.getStateList())}\r\n                                </Select>\r\n                            )}\r\n                </FormItem>\r\n                <FormItem label=\"生日\" {...formItemLayout}>\r\n                    {\r\n                        userInfo && type=='detail'?userInfo.birthday:\r\n                            getFieldDecorator('birthday',{\r\n                                initialValue:Moment(userInfo.birthday)\r\n                            })(\r\n                                <DatePicker />\r\n                            )}\r\n                </FormItem>\r\n                <FormItem label=\"联系地址\" {...formItemLayout}>\r\n                    {\r\n                        userInfo && type=='detail'?userInfo.address:\r\n                            getFieldDecorator('address',{\r\n                                initialValue:userInfo.address\r\n                            })(\r\n                                <Input.TextArea rows={3} placeholder=\"请输入联系地址\"/>\r\n                            )}\r\n                </FormItem>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\nUserForm = Form.create({})(UserForm);","import React from 'react';\r\nimport { HashRouter, Route, Switch, Redirect} from 'react-router-dom'\r\nimport App from './App'\r\nimport Login from './pages/login'\r\nimport Common from './common'\r\nimport OrderDetail from './pages/order/detail'\r\nimport Admin from \"./admin\";\r\nimport Home from \"./pages/home\";\r\nimport Gallery from \"./pages/ui/gallery\";\r\nimport FormLogin from \"./pages/form/login\";\r\nimport FormRegister from \"./pages/form/register\";\r\nimport HighTable from \"./pages/table/highTable\";\r\nimport BasicTable from \"./pages/table/basicTable\";\r\nimport City from \"./pages/city\";\r\nimport Order from \"./pages/order\";\r\nimport User from \"./pages/user\";\r\n\r\nexport default class ERouter extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <App>\r\n                    <Switch>\r\n                        <Route path=\"/login\" component={Login}/>\r\n                        <Route path=\"/common\" render={ ()=>\r\n                            <Common>\r\n                                <Route path=\"/common/order/detail/:orderId\" component={OrderDetail} />\r\n                            </Common>\r\n                        }/>\r\n                        <Route path=\"/\" render={()=>\r\n                            <Admin>\r\n                                <Switch>\r\n                                    <Route path=\"/home\" component={Home}/>\r\n                                    <Route path=\"/ui/gallery\" component={Gallery} />\r\n                                    <Route path=\"/form/login\" component={FormLogin} />\r\n                                    <Route path=\"/form/reg\" component={FormRegister} />\r\n                                    <Route path=\"/table/basic\" component={BasicTable} />\r\n                                    <Route path=\"/table/high\" component={HighTable} />\r\n                                    <Route path=\"/city\" component={City} />\r\n                                    <Route path=\"/order\" component={Order} />\r\n                                    <Route path=\"/user\" component={User} />\r\n                                    <Redirect to=\"/home\" />\r\n                                </Switch>\r\n                            </Admin>\r\n                        }/>\r\n                    </Switch>\r\n                </App>\r\n            </HashRouter>\r\n        );\r\n    };\r\n\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Router from './router'\nimport * as serviceWorker from './serviceWorker';\nimport Router from \"./router\";\n\nReactDOM.render(\n    <Router />,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}