{"version":3,"sources":["serviceWorker.js","App.js","pages/login/index.js","utils/utils.js","axios/index.js","components/Header/index.js","common.js","pages/order/detail.js","config/menuConfig.js","components/NavLeft/index.js","components/Footer/index.js","admin.js","pages/home/index.js","pages/ui/gallery.js","pages/form/login.js","pages/form/register.js","pages/table/highTable.js","pages/table/basicTable.js","pages/city/index.js","components/BaseForm/index.js","pages/order/index.js","router.js","index.js"],"names":["Boolean","window","location","hostname","match","App","react_default","a","createElement","this","props","children","React","Component","Login","card","Option","es_select","utils","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getOptionList","data","options","map","item","push","value","id","key","name","getDicValue","list","forEach","toString","stateConfig","state","1","2","3","4","5","6","interestConfig","interest","7","8","9","pagination","callback","onChange","current","page","pageSize","total","totalCount","showTotal","concat","showQuickJumper","showSizeChanger","getCityList","cityDic","carModeConfig","0","opModeConfig","authStatusConfig","getSelectOption","opList","index","value_","getOrderStatusList","orderStatusDic","Axios","Promise","resolve","reject","JsonP","url","param","err","response","status","console","error","isShowLoading","document","getElementById","style","display","axios","method","baseURL","timeout","params","then","res","code","modal","info","title","content","message","Header","_this2","setState","username","setInterval","sysTime","Util","getTime","getWeatherApiData","_this3","jsonp","encodeURIComponent","results","weather_data","dayPictureUrl","weather","_this$props","menuName","menuType","className","row","col","span","src","alt","href","Common","src_components_Header","Detail","getDetailInfo","orderId","ajax","_this","orderInfo","Utils","mode","orderSn","bikeSn","userName","mobile","startLocation","endLocation","distance","menuList","icon","btnList","SubMenu","menu","NavLeft","currentKey","collapsed","renderMenu","type","Item","react_router_dom","to","homeHandleClick","menuTreeNode","MenuConfig","onClick","handleClick","theme","Footer","Admin","src_components_NavLeft","src_components_Footer","Home","Meta","Gallery","visible","currentImg","openGallery","imgSrc","imgList","marginBottom","cover","actions","avatar","description","gutter","md","width","height","onCancel","footer","FormItem","es_form","FormLogin","handleSubmit","e","preventDefault","userInfo","form","getFieldsValue","validateFields","values","log","success","password","remember","usernameError","passwordError","getFieldDecorator","layout","onSubmit","validateStatus","help","rules","required","input","prefix","color","placeholder","es_button","htmlType","marginTop","initialValue","min","max","pattern","RegExp","valuePropName","es_checkbox","float","login","create","RadioGroup","es_radio","Group","TextArea","FormRegister","JSON","stringify","getBase64","img","reader","FileReader","addEventListener","result","readAsDataURL","handleChange","file","originFileObj","imageUrl","userImg","loading","formItemLayout","labelCol","xs","sm","wrapperCol","offsetLayout","offset","register_FormItem","Object","assign","label","input_number","register_Option","es_switch","moment","date_picker","showTime","format","autosize","minRows","maxRows","time_picker","upload","listType","showUploadList","action","form_register","HighTable","request","assertThisInitialized","dataSource2","selectedRowKeys","selectedRows","onRowClick","record","selectKey","selectedItem","handleModify","confirm","onOk","handleDelete","filters","sorter","sortOrder","order","sex","birthday","address","dataSource","columns","dataIndex","b","render","text","size","table","bordered","BasicTable","rowSelection","rowCheckSelection","onRow","City","isShowOpenCity","handleOpenCity","cityInfo","cityForm","body","localeCompare","opMode","arr","join","city_FilterForm","city_OpenCityForm","wrappedComponentRef","inst","FilterForm","city_FormItem","city_Option","margin","OpenCityForm","handleFilterSubmit","fieldsValue","filterSubmit","reset","resetFields","initFormList","formList","formItemList","length","i","field","begin_time","BaseForm_FormItem","end_time","colon","INPUT","SELECT","CHECKBOX","BaseForm","Order","orderConfirmVisible","handleFilter","requestList","checkSelectItem","openOrderDetail","open","handleConfirm","orderConfirmVisble","handleFinishOrder","marginLeft","order_FormItem","battery","startTime","ERouter","src_App","react_router","path","component","common_Common","OrderDetail","admin","ReactDOM","router_ERouter","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a1f88b9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './style/common.less'\n\nclass App extends React.Component {\n  render() {\n    return (\n            <div>\n                {this.props.children}\n            </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport { Card} from \"antd\";\r\n\r\nexport default class Login extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <p>login</p>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\n","/**\r\n * 工具类\r\n */\r\nimport { Select} from \"antd\";\r\nimport React from \"react\";\r\nconst Option = Select.Option;\r\nexport default {\r\n    // 日期格式化\r\n    formateDate(time){\r\n        if(!time)return '';\r\n        let date = new Date(time);\r\n        return date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate()+' '+date.getHours()+':'+date.getMinutes()+':'+date.getSeconds();\r\n    },\r\n\r\n    // 通用表单查询\r\n    getOptionList(data){\r\n        if(!data){\r\n            return [];\r\n        }\r\n        let options = []; //[<Option value=\"0\" key=\"all_key\">全部</Option>];\r\n        data.map((item)=>{\r\n            options.push(<Option value={item.id} key={item.id}>{item.name}</Option>)\r\n        });\r\n        return options;\r\n    },\r\n\r\n    // 状态词典\r\n    getDicValue(list,key){\r\n        var value;\r\n        list.forEach(function (item) {\r\n            if(item['id'] === key.toString()) {\r\n                value =  item['name'];\r\n            }\r\n        });\r\n        return value\r\n    },\r\n\r\n    // 状态词典\r\n    stateConfig(state){\r\n        let config =  {\r\n            \"1\":\"工作\",\r\n            \"2\":\"学习\",\r\n            \"3\":\"休息\",\r\n            \"4\":\"旅行\",\r\n            \"5\":\"创业\",\r\n            \"6\":\"其它\"\r\n        };\r\n        return config[state]\r\n    },\r\n\r\n    // 爱好词典\r\n    interestConfig(interest){\r\n        let config =  {\r\n            \"1\":\"骑行\",\r\n            \"2\":\"跑步\",\r\n            \"3\":\"打球\",\r\n            \"4\":\"玩游\",\r\n            \"5\":\"徒步\",\r\n            \"6\":\"看剧\",\r\n            \"7\":\"学习\",\r\n            \"8\":\"读书\",\r\n            \"9\":\"其他\",\r\n        };\r\n        return config[interest]\r\n    },\r\n\r\n    // 表格分页封装\r\n    pagination(data,callback){\r\n        return{\r\n            onChange:(current)=>{\r\n                callback(current)\r\n            },\r\n            current:data.data.page,\r\n            pageSize:data.data.pageSize,\r\n            total:data.data.totalCount,\r\n            showTotal:()=>{\r\n                return `共${data.data.totalCount}条`\r\n            },\r\n            showQuickJumper:true,\r\n            showSizeChanger:true,\r\n        }\r\n    },\r\n\r\n    // 城市词典\r\n    getCityList(){\r\n        return  [\r\n            { id: '0', name: '全部' },\r\n            { id: '1', name: '北京' },\r\n            { id: '2', name: '天津' },\r\n            { id: '3', name: '深圳' },\r\n            { id: '4', name: '武汉' },\r\n            { id: '5', name: '长沙' },\r\n            { id: '6', name: '其他' }\r\n        ];\r\n    },\r\n\r\n    // 状态词典\r\n    cityDic(state){\r\n        return this.getDicValue(this.getCityList(),state);\r\n    },\r\n\r\n    // 用车模式词典\r\n    carModeConfig(state){\r\n        let config =  {\r\n            \"0\":\"全部\",\r\n            \"1\":\"指定停车点模式\",\r\n            \"2\":\"禁停区模式\",\r\n        };\r\n        return config[state]\r\n    },\r\n\r\n    // 营运模式词典\r\n    opModeConfig(state){\r\n        let config =  {\r\n            \"0\":\"全部\",\r\n            \"1\":\"自营\",\r\n            \"2\":\"加盟\",\r\n        };\r\n        return config[state]\r\n    },\r\n\r\n    // 加盟商授权状态词典\r\n    authStatusConfig(state){\r\n        let config =  {\r\n            \"0\":\"全部\",\r\n            \"1\":\"已授权\",\r\n            \"2\":\"未授权\",\r\n        };\r\n        return config[state]\r\n    },\r\n\r\n    getSelectOption(list){\r\n        let opList = []\r\n         list.map((item,index)=>{\r\n             opList.push( \"<Option value=\" + item.key+ \">\" + item.value_+\"</Option>\")\r\n        });\r\n        return opList;\r\n    },\r\n\r\n    // 订单状态\r\n    getOrderStatusList(){\r\n        return  [\r\n            { id: '0', name: '全部' },\r\n            { id: '1', name: '进行中' },\r\n            { id: '2', name: '结束行程' }\r\n            ];\r\n    },\r\n\r\n    // 订单状态词典\r\n    orderStatusDic(state){\r\n         return this.getDicValue(this.getOrderStatusList(),state);\r\n    },\r\n\r\n\r\n\r\n}","import JsonP from 'jsonp'\r\nimport axios from 'axios'\r\nimport { Modal } from 'antd'\r\n\r\nexport default class Axios {\r\n    static jsonp(options){\r\n        return new Promise((resolve, reject) =>{\r\n           JsonP(options.url, {\r\n               param: 'callback'\r\n           },function (err, response) {\r\n               if (response && response.status === 'success') {\r\n                   resolve(response);\r\n               } else {\r\n                   console.error(\"get data from jsonp error！\")\r\n                   reject(response);\r\n               }\r\n           })\r\n        } )\r\n    }\r\n\r\n    static ajax(options){\r\n        let loading;\r\n        if(options.data && options.data.isShowLoading !== false){\r\n            loading = document.getElementById('ajaxLoading');\r\n            loading.style.display = 'block';\r\n        }\r\n        let baseApi = 'https://easy-mock.com/mock/5cf380b5cfcb92308b8d04cd/react-bike';\r\n        return new Promise((resolve,reject) =>{\r\n            axios({\r\n                url: options.url,\r\n                method: options.method,\r\n                baseURL: baseApi,\r\n                timeout: 10000,\r\n                params: options.params || '',\r\n                data : options.data|| ''\r\n            }).then((response)=>{\r\n                if (options.data && options.data.isShowLoading !== false) {\r\n                    loading = document.getElementById('ajaxLoading');\r\n                    loading.style.display = 'none';\r\n                }\r\n                if (response !== null && response.status == '200'){\r\n                    // console.log(\"response:\" + response.data.result)\r\n                    let res = response.data;\r\n                    if (res.code == '0'){\r\n                        // console.log(\"result:\" + res.message)\r\n                        resolve(res);\r\n                    }else{\r\n                        Modal.info({\r\n                            title:\"提示\",\r\n                            content:res.message\r\n                        })\r\n                    }\r\n                }else{\r\n                    reject(response.data);\r\n                }\r\n            })\r\n        });\r\n    }\r\n}","import React from 'react'\r\nimport {Row,Col} from \"antd\";\r\nimport './index.less'\r\nimport Util from '../../utils/utils'\r\nimport axios from '../../axios'\r\n\r\nclass Header extends React.Component{\r\n    state={}\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            username :\"环球\"\r\n        })\r\n        setInterval( ()=>{\r\n            let sysTime = Util.formateDate(new Date().getTime());\r\n            this.setState( {\r\n                sysTime\r\n            })\r\n        }, 1000);\r\n        this.getWeatherApiData();\r\n    }\r\n\r\n    getWeatherApiData(){\r\n        let city = '深圳';\r\n        axios.jsonp({\r\n            url:'http://api.map.baidu.com/telematics/v3/weather?location='+encodeURIComponent(city)+'&output=json&ak=3p49MVra6urFRGOT9s8UBWr2'\r\n        }).then((res) =>{\r\n            let data = res.results[0].weather_data[0];\r\n            this.setState({\r\n                dayPictureUrl:data.dayPictureUrl,\r\n                weather:data.weather\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {menuName, menuType} = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"header\">\r\n                    <Row className=\"header-top\">\r\n                        {\r\n                            menuType? <Col span={6} className=\"logo\">\r\n                                <img src=\"/assets/logo-ant.svg\" alt=\"\"/>\r\n                                <span>CycloneBoy 通用管理系统</span>\r\n                            </Col>:''\r\n                        }\r\n                        <Col span={menuType?18:24}>\r\n                            <span>欢迎，{this.state.username}</span>\r\n                            <a href=\"#\">退出</a>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        menuType?'':\r\n                            <Row className=\"breadcrumb\">\r\n                                <Col span={4} className=\"breadcrumb-title\">\r\n                                    {menuName || '首页'}\r\n                                </Col>\r\n                                <Col span={20} className=\"weather\">\r\n                                    <span className=\"date\">{this.state.sysTime}</span>\r\n                                    <span className=\"weather-img\">\r\n                                    <img src={this.state.dayPictureUrl} alt=\"\" />\r\n                                </span>\r\n                                    <span className=\"weather-detail\">\r\n                                    {this.state.weather}\r\n                                </span>\r\n                                </Col>\r\n                            </Row>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport  default  Header;","import React from 'react';\r\nimport { Row } from 'antd';\r\nimport Header from './components/Header'\r\nimport './style/common.less'\r\n\r\nexport default class Common extends  React.Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row className=\"simple-page\">\r\n                    <Header menuType=\"second\"/>\r\n                </Row>\r\n                <Row className=\"content\">\r\n                    {this.props.children}\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport { Card} from 'antd'\r\nimport axios from '../../axios'\r\nimport Utils from '../../utils/utils'\r\nimport './detail.less'\r\n\r\nexport default class Detail extends React.Component{\r\n\r\n    state = {}\r\n\r\n    componentDidMount(){\r\n        let orderId = this.props.match.params.orderId;\r\n        if(orderId){\r\n            this.getDetailInfo(orderId);\r\n        }\r\n    }\r\n\r\n    getDetailInfo = (orderId)=>{\r\n        axios.ajax({\r\n            url:'/order/detail',\r\n            method:'GET',\r\n            params:{\r\n                orderId: orderId\r\n            },\r\n            data:{\r\n                isShowLoading:true\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code ==0){\r\n                this.setState({\r\n                    orderInfo:res.data\r\n                })\r\n                // this.renderMap(res.data);\r\n            }\r\n        })\r\n    };\r\n\r\n    render(){\r\n        const info = this.state.orderInfo || {};\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    {/*<div id=\"orderDetailMap\" className=\"order-map\"></div>*/}\r\n                    <div className=\"detail-items\">\r\n                        <div className=\"item-title\">基础信息</div>\r\n                        <ul className=\"detail-form\">\r\n                            <li>\r\n                                <div className=\"detail-form-left\">用车模式</div>\r\n                                <div className=\"detail-form-content\">{Utils.carModeConfig(info.mode)}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">订单编号</div>\r\n                                <div className=\"detail-form-content\">{info.orderSn}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">车辆编号</div>\r\n                                <div className=\"detail-form-content\">{info.bikeSn}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">用户姓名</div>\r\n                                <div className=\"detail-form-content\">{info.userName}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">手机号码</div>\r\n                                <div className=\"detail-form-content\">{info.mobile}</div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"detail-items\">\r\n                        <div className=\"item-title\">行驶轨迹</div>\r\n                        <ul className=\"detail-form\">\r\n                            <li>\r\n                                <div className=\"detail-form-left\">行程起点</div>\r\n                                <div className=\"detail-form-content\">{info.startLocation}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">行程终点</div>\r\n                                <div className=\"detail-form-content\">{info.endLocation}</div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"detail-form-left\">行驶里程</div>\r\n                                <div className=\"detail-form-content\">{info.distance/1000}公里</div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n","const menuList = [\n    {\n        title: '首页',\n        key: '/home',\n        icon: 'home',\n    },\n    {\n        title: 'UI',\n        key: '/ui',\n        icon: 'home',\n        children: [\n            {\n                title: '按钮',\n                key: '/ui/buttons',\n            },\n            {\n                title: '弹框',\n                key: '/ui/modals',\n            },\n            {\n                title: 'Loading',\n                key: '/ui/loadings',\n            },\n            {\n                title: '通知提醒',\n                key: '/ui/notification',\n            },\n            {\n                title: '全局Message',\n                key: '/ui/messages',\n            },\n            {\n                title: 'Tab页签',\n                key: '/ui/tabs',\n            },\n            {\n                title: '图片画廊',\n                key: '/ui/gallery',\n            },\n            {\n                title: '轮播图',\n                key: '/ui/carousel',\n            }\n        ]\n    },\n    {\n        title: '表单',\n        key: '/form',\n        icon: 'form',\n        children: [\n            {\n                title: '登录',\n                key: '/form/login',\n                icon: 'form',\n            },\n            {\n                title: '注册',\n                key: '/form/reg',\n                icon: 'home',\n            }\n        ]\n    },\n    {\n        title: '表格',\n        key: '/table',\n        icon: 'table',\n        children: [\n            {\n                title: '基础表格',\n                key: '/table/basic',\n            },\n            {\n                title: '高级表格',\n                key: '/table/high',\n            }\n        ]\n    },\n    {\n        title: '富文本',\n        key: '/rich',\n        icon: 'file-markdown',\n    },\n    {\n        title: '城市管理',\n        key: '/city',\n        icon: 'file-markdown',\n    },\n    {\n        title: '订单管理',\n        key: '/order',\n        icon: 'fire',\n        btnList: [\n            {\n                title: '订单详情',\n                key: 'detail'\n            },\n            {\n                title: '结束订单',\n                key: 'finish'\n            }\n        ]\n    },\n    {\n        title: '员工管理',\n        key: '/user',\n        icon: 'user'\n    },\n    {\n        title: '车辆地图',\n        key: '/bikeMap',\n        icon: 'fire',\n    },\n    {\n        title: '图标',\n        key: '/charts',\n        icon: 'instagram',\n        children: [\n            {\n                title: '柱形图',\n                key: '/charts/bar'\n            },\n            {\n                title: '饼图',\n                key: '/charts/pie'\n            },\n            {\n                title: '折线图',\n                key: '/charts/line'\n            },\n        ]\n    },\n    {\n        title: '权限设置',\n        key: '/permission',\n        icon: 'team',\n    },\n];\nexport default menuList;","import React from 'react'\r\nimport { Menu, Icon  } from 'antd';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport MenuConfig from '../../config/menuConfig'\r\nimport './index.less'\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nclass NavLeft extends React.Component {\r\n    state = {\r\n        currentKey: '',\r\n        collapsed: false,\r\n    };\r\n\r\n    componentWillMount() {\r\n        const menuTreeNode = this.renderMenu(MenuConfig);\r\n        this.setState( {\r\n            menuTreeNode\r\n        })\r\n    }\r\n\r\n    // 菜单渲染\r\n    renderMenu = (data) =>{\r\n        return data.map((item) =>{\r\n            if(item.children){\r\n                return (\r\n                    <SubMenu key={item.key} title={\r\n                        <span>\r\n                          <Icon type={item.icon} />\r\n                          <span>{item.title}</span>\r\n                        </span>\r\n                    }>\r\n                        { this.renderMenu(item.children)}\r\n                    </SubMenu>\r\n                )\r\n            }\r\n            return <Menu.Item key={item.key} title={item.title}>\r\n\r\n                <NavLink to={item.key}>\r\n                    <Icon type={item.icon}/>{item.title}\r\n                </NavLink>\r\n                {/*{item.title}*/}\r\n            </Menu.Item>\r\n\r\n        })\r\n    };\r\n\r\n    homeHandleClick = () =>{\r\n        // const {dispatch} = this.props;\r\n        // dispatch()\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavLink to=\"/home\" onClick={this.homeHandleClick}>\r\n                    <div className=\"logo\">\r\n                        <img src=\"/assets/logo-ant.svg\" alt=\"\"/>\r\n                        <h1>环球车队</h1>\r\n                        {/*<Button type=\"primary\" onClick={this.toggleCollapsed} style={{ marginBottom: 16 }}>*/}\r\n                            {/*<Icon type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'} />*/}\r\n                        {/*</Button>*/}\r\n                    </div>\r\n                </NavLink>\r\n                <Menu\r\n                    onClick={this.handleClick}\r\n                    theme=\"dark\"\r\n                    >\r\n                    {this.state.menuTreeNode}\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport  default  NavLeft;","import React from 'react'\r\nimport './index.less'\r\n\r\nclass Footer extends React.Component{\r\n\r\n    render() {\r\n        return <div className=\"footer\">\r\n            版权所有：环球车队&cycloneboy 技术支持：cycloneboy\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\nimport { Row,Col } from 'antd';\r\nimport NavLeft from  './components/NavLeft'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\n\r\nimport './style/common.less'\r\nclass Admin extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"container\">\r\n                <Col  span={4} className=\"nav-left\">\r\n                    <NavLeft/>\r\n                </Col>\r\n                <Col span={20} className=\"main\">\r\n                    <Header/>\r\n                    <Row className=\"content\">\r\n                         {/*<Home/>*/}\r\n                        {this.props.children}\r\n                    </Row>\r\n                    <Footer/>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Admin","import React from 'react';\r\nimport './index.less'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"home-wrap\">\r\n            欢迎来到环球车队后台管理系统\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport {Card, Row, Col, Modal,Icon, Avatar } from 'antd'\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default class Gallery extends  React.Component{\r\n\r\n    state = {\r\n        visible:false,\r\n        currentImg:''\r\n    };\r\n\r\n    openGallery = (imgSrc) =>{\r\n        this.setState({\r\n            visible: true,\r\n            currentImg: '/gallery/' + imgSrc\r\n        })\r\n    };\r\n\r\n    render() {\r\n        // TODO 从服务端获取图片地址和图片的信息\r\n        const imgs = [\r\n            ['1.png', '2.png', '3.png', '4.png', '5.png','6.png'],\r\n            [ '7.png', '8.png', '9.png', '10.png','11.png', '12.png'],\r\n            [ '13.png', '14.png', '15.png','16.png', '17.png', '18.png'],\r\n            [ '19.png', '20.png','21.png', '22.png', '23.png', '24.png'],\r\n        ];\r\n\r\n        const imgList = imgs.map((list) => list.map( (item) =>\r\n            <Card\r\n                style={{marginBottom:10}}\r\n                cover={\r\n                    <img\r\n                        src={'/gallery/' + item}\r\n                        onClick={() => this.openGallery(item)}\r\n                        alt=\"\"\r\n                    />\r\n                }\r\n                actions={\r\n                    [<Icon type=\"setting\" onClick={()=>{\r\n                        console.info(\"setting\");\r\n                    }}/>,\r\n                        <Icon type=\"edit\" onClick={()=>{\r\n                            console.info(\"edit\");\r\n                        }}/>,\r\n                        <Icon type=\"ellipsis\" onClick={()=>{\r\n                            console.info(\"ellipsis\");\r\n                        }}/>]\r\n                }\r\n            >\r\n            <Meta\r\n                avatar={<Avatar src={'/gallery/' + item} />}\r\n                title=\"cycloneboy\"\r\n                description=\"www.cycloneboy.cn\"/>\r\n            </Card>\r\n        ));\r\n        return (\r\n            <div className=\"card-wrap\">\r\n                <Row gutter={10}>\r\n                    {\r\n                         imgList.map((item) =>{\r\n                            return <Col md={6}>\r\n                                {item}\r\n                            </Col>\r\n                        })\r\n                    }\r\n                </Row>\r\n                <Modal\r\n                    width={300}\r\n                    height={500}\r\n                    visible={this.state.visible}\r\n                    title=\"图片画廊\"\r\n                    onCancel={ ()=>{\r\n                        this.setState({\r\n                                visible: false,\r\n                        })\r\n                    }}\r\n                    footer={null}\r\n                    >\r\n                    {<img src={this.state.currentImg} alt=\"\" style={{width:'100%'}}/>}\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport { Card, Form, Input, Button, message, Icon, Checkbox } from \"antd\";\r\nconst FormItem = Form.Item;\r\nclass  FormLogin extends React.Component{\r\n\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        this.props.form.validateFields();\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        let userInfo = this.props.form.getFieldsValue();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n                message.success(`${userInfo.username} 恭喜你，你输入的密码为：${userInfo.password} ,记住我：${userInfo.remember}`)\r\n            }\r\n        });\r\n    };\r\n    usernameError=\"\";\r\n    passwordError=\"\";\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div>\r\n                <Card title=\"登录行内表单\">\r\n                    <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n                        <Form.Item validateStatus={this.usernameError ? 'error' : ''} help={this.usernameError || ''}>\r\n                            {getFieldDecorator('username', {\r\n                                rules: [{ required: true, message: 'Please input your username!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder=\"请输入用户名\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item validateStatus={this.passwordError ? 'error' : ''} help={this.passwordError || ''}>\r\n                            {getFieldDecorator('password', {\r\n                                rules: [{ required: true, message: 'Please input your Password!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"请输入密码\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" >\r\n                                登录\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n                <Card title=\"登录水平表单\" style={{marginTop:10}}>\r\n                    <Form style={{width:500}}>\r\n                        <FormItem>\r\n                            {getFieldDecorator('username', {\r\n                                initialValue:'',\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: '用户名不能为空!'\r\n                                    },{\r\n                                        min:5,max:10,\r\n                                        message:'长度不在范围内'\r\n                                    },{\r\n                                        pattern:new RegExp('^\\\\w+$','g'),\r\n                                        message:'用户名必须为字母或者数字'\r\n                                    }\r\n                                    ],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder=\"请输入用户名\"\r\n                                />,\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {getFieldDecorator('password', {\r\n                                initialValue:'',\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: '密码不能为空!'\r\n                                    },{\r\n                                        min:5,max:10,\r\n                                        message:'长度不在范围内'\r\n                                    },{\r\n                                        pattern:new RegExp('^\\\\w+$','g'),\r\n                                        message:'密码必须为字母或者数字'\r\n                                    }\r\n                                ],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"lock\"  />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"请输入密码\"\r\n                                />,\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {getFieldDecorator('remember', {\r\n                                initialValue:true,\r\n                                valuePropName:'checkd'\r\n                            })(\r\n                                <Checkbox>记住密码</Checkbox>\r\n                            )}\r\n                            <a href=\"#\" style={{float:'right'}}>忘记密码？</a>\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button type=\"primary\" onClick={this.handleSubmit} >\r\n                                登录\r\n                            </Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Form.create()(FormLogin);\r\n\r\n","import React from 'react';\r\nimport {Card,Form,Button,Input,Checkbox,Radio,Select,Switch,DatePicker,TimePicker,Upload,Icon,message, InputNumber} from 'antd'\r\nimport moment from 'moment'\r\nconst FormItem = Form.Item;\r\nconst RadioGroup = Radio.Group;\r\nconst Option = Select.Option;\r\nconst TextArea = Input.TextArea;\r\nclass  FormRegister extends React.Component{\r\n\r\n    state={}\r\n\r\n    handleSubmit = ()=>{\r\n        let userInfo = this.props.form.getFieldsValue();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log(JSON.stringify(userInfo));\r\n                message.success(`${userInfo.username} 恭喜你，你输入的密码为：${userInfo.password} ,记住我：${userInfo.remember}`)\r\n            }\r\n        });\r\n    };\r\n\r\n    getBase64 = (img, callback)=>{\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load',()=> callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    handleChange = (info) =>{\r\n        if(info.file.status === 'uploading'){\r\n            this.setState({\r\n                loading:true\r\n            });\r\n            return;\r\n        } else if (info.file.status === 'done'){\r\n            this.getBase64(info.file.originFileObj, imageUrl => this.setState({\r\n                userImg:imageUrl,\r\n                loading:false,\r\n            }))\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol:{\r\n                xs:24,\r\n                sm:4\r\n            },\r\n            wrapperCol:{\r\n                xs:24,\r\n                sm:12\r\n            }\r\n        };\r\n        const offsetLayout = {\r\n            wrapperCol:{\r\n                xs:24,\r\n                sm:{\r\n                    span:12,\r\n                    offset:4\r\n                }\r\n            }\r\n        };\r\n        const rowObject = {\r\n            minRows:4, maxRows:6\r\n        }\r\n        return (\r\n            <div>\r\n                <Card title=\"注册表单\">\r\n                    <Form layout=\"horizontal\">\r\n                        <FormItem label=\"用户名\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('username', {\r\n                                initialValue:'',\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: '用户名不能为空!'\r\n                                    },{\r\n                                        min:5,max:10,\r\n                                        message:'长度不在范围内'\r\n                                    },{\r\n                                        pattern:new RegExp('^\\\\w+$','g'),\r\n                                        message:'用户名必须为字母或者数字'\r\n                                    }\r\n                                ],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder=\"请输入用户名\"\r\n                                />,\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem label=\"密码\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('password', {\r\n                                initialValue:'',\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: '密码不能为空!'\r\n                                    },{\r\n                                        min:5,max:10,\r\n                                        message:'长度不在范围内'\r\n                                    },{\r\n                                        pattern:new RegExp('^\\\\w+$','g'),\r\n                                        message:'密码必须为字母或者数字'\r\n                                    }\r\n                                ],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"lock\"  />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"请输入密码\"\r\n                                />,\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem label=\"性别\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('sex', {\r\n                                    initialValue:'1',\r\n                                })(\r\n                                    <RadioGroup>\r\n                                        <Radio value=\"1\">男</Radio>\r\n                                        <Radio value=\"2\">女</Radio>\r\n                                        <Radio value=\"3\">保密</Radio>\r\n                                    </RadioGroup>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem label=\"年龄\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('age', {\r\n                                    initialValue:18,\r\n                                })(\r\n                                    <InputNumber/>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem label=\"当前状态\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('state', {\r\n                                    initialValue:\"2\",\r\n                                })(\r\n                                    <Select>\r\n                                        <Option value=\"1\">工作</Option>\r\n                                        <Option value=\"2\">学习</Option>\r\n                                        <Option value=\"3\">休息</Option>\r\n                                        <Option value=\"4\">旅行</Option>\r\n                                        <Option value=\"5\">创业</Option>\r\n                                        <Option value=\"6\">其他</Option>\r\n                                    </Select>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem label=\"爱好\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('interest', {\r\n                                    initialValue:['2','4'],\r\n                                })(\r\n                                    <Select mode=\"multiple\">\r\n                                        <Option value=\"1\">骑行</Option>\r\n                                        <Option value=\"2\">跑步</Option>\r\n                                        <Option value=\"3\">打球</Option>\r\n                                        <Option value=\"4\">玩游戏</Option>\r\n                                        <Option value=\"5\">徒步</Option>\r\n                                        <Option value=\"6\">看剧</Option>\r\n                                        <Option value=\"7\">学习</Option>\r\n                                        <Option value=\"8\">读书</Option>\r\n                                        <Option value=\"9\">其他</Option>\r\n                                    </Select>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem label=\"是否已婚\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('isMarried', {\r\n                                    valuePropName:'checked',\r\n                                    initialValue: false\r\n                                })(\r\n                                    <Switch/>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem label=\"生日\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('birthday', {\r\n                                    initialValue: moment(\"2019-06-01\")\r\n                                })(\r\n                                    <DatePicker\r\n                                        showTime\r\n                                        format=\"YYYY-MM-DD HH:mm:ss\"/>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem label=\"联系地址\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('address', {\r\n                                    initialValue: '湖北省武汉市洪山区'\r\n                                })(\r\n                                    <TextArea\r\n                                        autosize={rowObject}/>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem label=\"早起时间\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('time')(\r\n                                    <TimePicker/>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem label=\"头像\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('userImg')(\r\n                                    <Upload\r\n                                        listType=\"picture-card\"\r\n                                        showUploadList={true}\r\n                                        action=\"//jsonplaceholder.typicode.com/\"\r\n                                        onChange={this.handleChange}\r\n                                    >\r\n                                        {this.state.userImg ? <img src={this.state.userImg}/>: <Icon type=\"plus\"/>}\r\n                                    </Upload>\r\n                                )}\r\n                        </FormItem>\r\n                        <FormItem {...offsetLayout}>\r\n                            {getFieldDecorator('remember', {\r\n                                initialValue:false,\r\n                                valuePropName:'checked'\r\n                            })(\r\n                                <Checkbox>我已经阅读过\r\n                                    <a href='#'>环球车队协议</a>\r\n                                </Checkbox>\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem {...offsetLayout}>\r\n                            <Button type=\"primary\" onClick={this.handleSubmit} >\r\n                                注册\r\n                            </Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Form.create()(FormRegister);\r\n\r\n","import React from 'react';\r\nimport {Card, Table,Button, Modal,message} from \"antd\";\r\nimport axios from './../../axios/index'\r\nimport Utils from  './../../utils/utils'\r\n\r\nexport default class HighTable  extends React.Component{\r\n\r\n    state ={\r\n    };\r\n\r\n    params = {\r\n        page:1\r\n    };\r\n\r\n    componentDidMount() {\r\n        const data = [\r\n            {\r\n                id:'0',\r\n                userName:'Jack',\r\n                sex:'1',\r\n                state:'1',\r\n                interest:'1',\r\n                birthday:'2000-01-01',\r\n                address:'北京市海淀区奥林匹克公园',\r\n                time:'09:00'\r\n            },\r\n            {\r\n                id: '1',\r\n                userName: 'Tom',\r\n                sex: '1',\r\n                state: '1',\r\n                interest: '1',\r\n                birthday: '2000-01-01',\r\n                address: '北京市海淀区奥林匹克公园',\r\n                time: '09:00'\r\n            },\r\n            {\r\n                id: '2',\r\n                userName: 'Lily',\r\n                sex: '1',\r\n                state: '1',\r\n                interest: '1',\r\n                birthday: '2000-01-01',\r\n                address: '北京市海淀区奥林匹克公园',\r\n                time: '09:00'\r\n            },\r\n        ];\r\n        data.map((item,index)=>{\r\n            item.key = index;\r\n        });\r\n        this.setState({\r\n            dataSource :data\r\n        });\r\n        this.request();\r\n    }\r\n\r\n    request = ()=>{\r\n        let _this = this;\r\n        axios.ajax({\r\n            url:'/table/list',\r\n            method:'GET',\r\n            params:{\r\n                page:this.params.page\r\n            },\r\n            data:{\r\n                isShowLoading:true\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code == '0'){\r\n                console.info(\"getdata: \" + res.data);\r\n                res.data.result.map((item,index)=>{\r\n                    item.key = index;\r\n                });\r\n                this.setState({\r\n                    dataSource2:res.data.result,\r\n                    selectedRowKeys:[],\r\n                    selectedRows:null,\r\n                    pagination: Utils.pagination(res,(current)=>{\r\n                        _this.params.page = current;\r\n                        this.request();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    };\r\n\r\n    onRowClick = (record,index)=>{\r\n        let selectKey = [index];\r\n        Modal.info({\r\n            title:\"信息\",\r\n            content:`用户名：${record.userName},用户爱好：${record.interest}`\r\n        });\r\n        this.setState({\r\n            selectedRowKeys:selectKey,\r\n            selectedItem: record\r\n        })\r\n    };\r\n\r\n    handleModify =(item) =>{\r\n        let id = item.id;\r\n        Modal.confirm({\r\n            title:\"修改\",\r\n            content:\"你确认要修改此条数据吗？\",\r\n            onOk:()=>{\r\n                message.success('修改成功！')\r\n                this.request();\r\n            }\r\n        })\r\n    };\r\n\r\n    handleDelete =(item) =>{\r\n        let id = item.id;\r\n        Modal.confirm({\r\n            title:\"确认\",\r\n            content:\"你确认要删除此条数据吗？\",\r\n            onOk:()=>{\r\n                message.success('删除成功！')\r\n                this.request();\r\n            }\r\n        })\r\n    };\r\n\r\n    handleChange = (pagination, filters, sorter)=>{\r\n        console.log(\"::\" + sorter)\r\n        this.setState({\r\n            sortOrder:sorter.order\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const selectedRowKeys = this.state.selectedRowKeys;\r\n        const  rowSelection = {\r\n            type: 'radio',\r\n            selectedRowKeys\r\n        };\r\n\r\n        const rowCheckSelection = {\r\n            type: 'checkbox',\r\n            selectedRowKeys,\r\n            onChange: (selectedRowKeys, selectedRows) => {\r\n                console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n                this.setState({\r\n                    selectedRowKeys,\r\n                    selectedRows\r\n                })\r\n            },\r\n        };\r\n\r\n        const columns = [\r\n            {\r\n                title: 'id',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                sorter:(a,b)=>{\r\n                    return a.id - b.id;\r\n                },\r\n                sortOrder:this.state.sortOrder\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'userName',\r\n                key: 'userName',\r\n                sorter:(a,b)=>{\r\n                    return a.userName - b.userName;\r\n                },\r\n            },\r\n            {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                key: 'sex',\r\n                render(sex){\r\n                    return sex === 1?'男': (sex===2?'女':'保密')\r\n                },\r\n                sorter:(a,b)=>{\r\n                    return a.sex - b.sex;\r\n                },\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                key: 'state',\r\n                render(state){\r\n                    return Utils.stateConfig(state);\r\n                }\r\n            },\r\n            {\r\n                title: '爱好',\r\n                dataIndex: 'interest',\r\n                key: 'state',\r\n                render(interest){\r\n                    return Utils.interestConfig(interest);\r\n                }\r\n            },\r\n            {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                dataIndex: 'birthday'\r\n            },\r\n            {\r\n                title: '地址',\r\n                key: 'address',\r\n                dataIndex: 'address'\r\n            },\r\n            {\r\n                title: '早起时间',\r\n                key: 'time',\r\n                dataIndex: 'time'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text,item) => (\r\n                    <span>\r\n                        <Button size=\"small\" type=\"primary\" onClick={(item)=> {this.handleModify(item)}}>编辑</Button>\r\n                        <Button size=\"small\" type=\"danger\" onClick={(item)=> {this.handleDelete(item)}}>删除</Button>\r\n                     </span>\r\n                ),\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                <Card title=\"表格排序和操作按钮\" style={{marginTop:'10px'}}>\r\n                    <Table\r\n                        bordered\r\n                        dataSource={this.state.dataSource2}\r\n                        columns={columns}\r\n                        onChange={this.handleChange}\r\n                        pagination={this.state.pagination}/>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport {Card, Table, Modal} from \"antd\";\r\nimport axios from './../../axios/index'\r\nimport Utils from  './../../utils/utils'\r\n\r\nexport default class BasicTable  extends React.Component{\r\n\r\n    state ={\r\n        dataSource: [],\r\n        dataSource2: [],\r\n    };\r\n\r\n    params = {\r\n        page:1\r\n    };\r\n\r\n    componentDidMount() {\r\n        const data = [\r\n            {\r\n                id:'0',\r\n                userName:'Jack',\r\n                sex:'1',\r\n                state:'1',\r\n                interest:'1',\r\n                birthday:'2000-01-01',\r\n                address:'北京市海淀区奥林匹克公园',\r\n                time:'09:00'\r\n            },\r\n            {\r\n                id: '1',\r\n                userName: 'Tom',\r\n                sex: '1',\r\n                state: '1',\r\n                interest: '1',\r\n                birthday: '2000-01-01',\r\n                address: '北京市海淀区奥林匹克公园',\r\n                time: '09:00'\r\n            },\r\n            {\r\n                id: '2',\r\n                userName: 'Lily',\r\n                sex: '1',\r\n                state: '1',\r\n                interest: '1',\r\n                birthday: '2000-01-01',\r\n                address: '北京市海淀区奥林匹克公园',\r\n                time: '09:00'\r\n            },\r\n        ];\r\n        data.map((item,index)=>{\r\n            item.key = index;\r\n        });\r\n        this.setState({\r\n            dataSource :data\r\n        });\r\n        this.request();\r\n    }\r\n\r\n    request = ()=>{\r\n        let _this = this;\r\n        axios.ajax({\r\n            url:'/table/list',\r\n            method:'GET',\r\n            params:{\r\n                page:this.params.page\r\n            },\r\n            data:{\r\n                isShowLoading:true\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code == '0'){\r\n                console.info(\"getdata: \" + res.data);\r\n                res.data.result.map((item,index)=>{\r\n                    item.key = index;\r\n                });\r\n                this.setState({\r\n                    dataSource2:res.data.result,\r\n                    selectedRowKeys:[],\r\n                    selectedRows:null,\r\n                    pagination: Utils.pagination(res,(current)=>{\r\n                        _this.params.page = current;\r\n                        this.request();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    };\r\n\r\n    onRowClick = (record,index)=>{\r\n        let selectKey = [index];\r\n        Modal.info({\r\n            title:\"信息\",\r\n            content:`用户名：${record.userName},用户爱好：${record.interest}`\r\n        });\r\n        this.setState({\r\n            selectedRowKeys:selectKey,\r\n            selectedItem: record\r\n        })\r\n    };\r\n    render() {\r\n        const selectedRowKeys = this.state.selectedRowKeys;\r\n        const  rowSelection = {\r\n            type: 'radio',\r\n            selectedRowKeys\r\n        };\r\n\r\n        const rowCheckSelection = {\r\n            type: 'checkbox',\r\n            selectedRowKeys,\r\n            onChange: (selectedRowKeys, selectedRows) => {\r\n                console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n                this.setState({\r\n                    selectedRowKeys,\r\n                    selectedRows\r\n                })\r\n            },\r\n        };\r\n\r\n\r\n\r\n        const columns = [\r\n            {\r\n                title: 'id',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'userName',\r\n                key: 'userName',\r\n            },\r\n            {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                key: 'sex',\r\n                render(sex){\r\n                    return sex === 1?'男': (sex===2?'女':'保密')\r\n                }\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'state',\r\n                key: 'state',\r\n                render(state){\r\n                    return Utils.stateConfig(state);\r\n                }\r\n            },\r\n            {\r\n                title: '爱好',\r\n                dataIndex: 'interest',\r\n                key: 'state',\r\n                render(interest){\r\n                    return Utils.interestConfig(interest);\r\n                }\r\n            },\r\n            {\r\n                title: '生日',\r\n                key: 'birthday',\r\n                dataIndex: 'birthday'\r\n            },\r\n            {\r\n                title: '地址',\r\n                key: 'address',\r\n                dataIndex: 'address'\r\n            },\r\n            {\r\n                title: '早起时间',\r\n                key: 'time',\r\n                dataIndex: 'time'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: () => (\r\n                    <span>\r\n                         <a href=\"#\">修改</a>\r\n                        <a href=\"#\">删除</a>\r\n                     </span>\r\n                ),\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                <Card title=\"基础表格\">\r\n                    <Table\r\n                        rowSelection={rowSelection}\r\n                        dataSource={this.state.dataSource}\r\n                        columns={columns}\r\n                        pagination={false}/>\r\n                </Card>\r\n                <Card title=\"动态数据渲染基础表格\" style={{marginTop:'10px'}}>\r\n                    <Table\r\n                        bordered\r\n                        rowSelection={rowSelection}\r\n                        dataSource={this.state.dataSource2}\r\n                        columns={columns}\r\n                        pagination={false}/>\r\n                </Card>\r\n                <Card title=\"Mock单选\" style={{marginTop:'10px'}}>\r\n                    <Table\r\n                        bordered\r\n                        rowSelection={rowSelection}\r\n                        dataSource={this.state.dataSource2}\r\n                        columns={columns}\r\n                        onRow={(record,index)=>{\r\n                            return {\r\n                                onClick:()=>{\r\n                                    this.onRowClick(record,index);\r\n                                }\r\n                            }\r\n                        }}\r\n                        pagination={false}/>\r\n                </Card>\r\n                <Card title=\"Mock单选2\" style={{marginTop:'10px'}}>\r\n                    <Table\r\n                        bordered\r\n                        dataSource={this.state.dataSource2}\r\n                        columns={columns}\r\n                        rowSelection={rowCheckSelection}\r\n                        pagination={false}/>\r\n                </Card>\r\n                <Card title=\"Mock表格分页\" style={{marginTop:'10px'}}>\r\n                    <Table\r\n                        bordered\r\n                        dataSource={this.state.dataSource2}\r\n                        columns={columns}\r\n                        pagination={this.state.pagination}/>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport {Card,Button, Table, Form, Select, Modal, message} from \"antd\";\r\nimport axios from './../../axios/index'\r\nimport Utils from  './../../utils/utils'\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nexport default class City extends React.Component {\r\n\r\n    state ={\r\n        list:[],\r\n        isShowOpenCity:false\r\n    };\r\n\r\n    params = {\r\n        page:1\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.request()\r\n    }\r\n\r\n    // 默认请求我们的接口数据\r\n    request = ()=>{\r\n        let _this = this;\r\n        axios.ajax({\r\n            url:'/city',\r\n            method:'GET',\r\n            params:{\r\n                page:this.params.page\r\n            },\r\n            data:{\r\n                isShowLoading:true\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code == '0'){\r\n                console.info(\"getdata: \" + res.data);\r\n                let list = res.data.result.map((item,index)=>{\r\n                    item.key = index;\r\n                    return item;\r\n                });\r\n                this.setState({\r\n                    dataSource:list,\r\n                    pagination: Utils.pagination(res,(current)=>{\r\n                        _this.params.page = current;\r\n                        this.request();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    handleChange = (pagination, filters, sorter)=>{\r\n        console.log(\"::\" + sorter)\r\n        this.setState({\r\n            sortOrder:sorter.order\r\n        })\r\n    };\r\n\r\n    handleModify =(item) =>{\r\n        let id = item.id;\r\n        Modal.confirm({\r\n            title:\"修改\",\r\n            content:\"你确认要修改此条数据吗？\",\r\n            onOk:()=>{\r\n                message.success('修改成功！')\r\n                this.request();\r\n            }\r\n        })\r\n    };\r\n\r\n    handleDelete =(item) =>{\r\n        let id = item.id;\r\n        Modal.confirm({\r\n            title:\"确认\",\r\n            content:\"你确认要删除此条数据吗？\",\r\n            onOk:()=>{\r\n                message.success('删除成功！')\r\n                this.request();\r\n            }\r\n        })\r\n    };\r\n\r\n    handleOpenCity =()=>{\r\n        this.setState({\r\n            isShowOpenCity:true\r\n        })\r\n    };\r\n\r\n    // 城市开通提交\r\n    handleSubmit =()=>{\r\n        let cityInfo = this.cityForm.props.form.getFieldsValue();\r\n        console.log(cityInfo);\r\n        axios.ajax({\r\n            url:'/city/open',\r\n            method:'POST',\r\n            data:{\r\n                body:cityInfo\r\n            }\r\n        }).then((res)=> {\r\n            if (res.code == '0') {\r\n                message.success('开通成功');\r\n                this.setState({\r\n                    isShowOpenCity:false\r\n                })\r\n                this.request();\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title:'城市ID',\r\n                dataIndex:'id',\r\n                sorter:(a,b)=>{\r\n                    return a.id - b.id;\r\n                },\r\n            },\r\n            {\r\n                title: '城市名称',\r\n                dataIndex: 'name',\r\n                sorter:(a,b)=>{\r\n                    return a.name.localeCompare(b.name);\r\n                },\r\n            },\r\n            {\r\n                title: '用车模式',\r\n                dataIndex: 'mode',\r\n                render(mode){\r\n                    return mode ==1 ?'停车点':'禁停区';\r\n                },\r\n                sorter:(a,b)=>{\r\n                    return a.mode - b.mode;\r\n                },\r\n            }, {\r\n                title: '营运模式',\r\n                dataIndex: 'opMode',\r\n                render(opMode) {\r\n                    return opMode == 1 ? '自营' : (opMode == 2 ? '加盟' : '其他');\r\n                },\r\n                sorter:(a,b)=>{\r\n                    return a.opMode - b.opMode;\r\n                },\r\n            }, {\r\n                title: '授权加盟商',\r\n                dataIndex: 'franchiseeName'\r\n            }, {\r\n                title: '城市管理员',\r\n                dataIndex: 'cityAdmins',\r\n                render(arr){\r\n                    return arr.map((item)=>{\r\n                        return item.userName;\r\n                    }).join(',');\r\n                }\r\n            }, {\r\n                title: '城市开通时间',\r\n                dataIndex: 'openTime'\r\n            }, {\r\n                title: '操作时间',\r\n                dataIndex: 'updateTime',\r\n                render: Utils.formateDate\r\n            }, {\r\n                title: '操作人',\r\n                dataIndex: 'sysUserName'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text,item) => (\r\n                    <span>\r\n                        <Button size=\"small\" type=\"primary\" onClick={(item)=> {this.handleModify(item)}}>编辑</Button>\r\n                        <Button size=\"small\" type=\"danger\" onClick={(item)=> {this.handleDelete(item)}}>删除</Button>\r\n                     </span>\r\n                ),\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Card>\r\n                        <FilterForm />\r\n                    </Card>\r\n                    <Card style={{marginTop:10}}>\r\n                        <Button type=\"primary\" onClick={this.handleOpenCity}>开通城市</Button>\r\n                    </Card>\r\n                    <Table className=\"content-wrap\"\r\n                        bordered\r\n                        dataSource={this.state.dataSource}\r\n                        columns={columns}\r\n                        onChange={this.handleChange}\r\n                        pagination={this.state.pagination}/>\r\n                </div>\r\n                <Modal\r\n                    title=\"开通城市\"\r\n                    visible={this.state.isShowOpenCity}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            isShowOpenCity:false\r\n                        })\r\n                    }}\r\n                    onOk={this.handleSubmit}\r\n                    >\r\n                    <OpenCityForm wrappedComponentRef={(inst)=>{this.cityForm = inst;}}/>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass FilterForm extends React.Component{\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form layout=\"inline\">\r\n                <FormItem label=\"城市\">\r\n                    {\r\n                        getFieldDecorator('cityId')(\r\n                            <Select\r\n                                style={{width:100}}\r\n                                placeholder=\"全部\"\r\n                            >\r\n                                <Option value=\"0\">全部</Option>\r\n                                <Option value=\"1\">北京市</Option>\r\n                                <Option value=\"2\">天津市</Option>\r\n                                <Option value=\"3\">深圳市</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"用车模式\">\r\n                    {\r\n                        getFieldDecorator('mode')(\r\n                            <Select\r\n                                style={{ width: 120 }}\r\n                                placeholder=\"全部\"\r\n                            >\r\n\r\n                                <Option value=\"0\">全部</Option>\r\n                                <Option value=\"1\">指定停车点模式</Option>\r\n                                <Option value=\"2\">禁停区模式</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"营运模式\">\r\n                    {\r\n                        getFieldDecorator('opMode')(\r\n                            <Select\r\n                                style={{ width: 80 }}\r\n                                placeholder=\"全部\"\r\n                            >\r\n                                <Option value=\"0\">全部</Option>\r\n                                <Option value=\"1\">自营</Option>\r\n                                <Option value=\"2\">加盟</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"加盟商授权状态\">\r\n                    {\r\n                        getFieldDecorator('authStatus')(\r\n                            <Select\r\n                                style={{ width: 100 }}\r\n                                placeholder=\"全部\"\r\n                            >\r\n                                <Option value=\"0\">全部</Option>\r\n                                <Option value=\"1\">已授权</Option>\r\n                                <Option value=\"2\">未授权</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem>\r\n                    <Button type=\"primary\" style={{margin:'0 20px'}} >查询</Button>\r\n                    <Button>重置</Button>\r\n                </FormItem>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nFilterForm = Form.create({})(FilterForm);\r\n\r\nclass OpenCityForm extends React.Component{\r\n    render(){\r\n        const formItemLayout = {\r\n            labelCol:{\r\n                span:5\r\n            },\r\n            wrapperCol:{\r\n                span:19\r\n            }\r\n        }\r\n        const { getFieldDecorator }  =this.props.form;\r\n        return (\r\n            <Form layout=\"horizontal\">\r\n                <FormItem label=\"选择城市\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('cityId',{\r\n                            initialValue:'1'\r\n                        })(\r\n                            <Select style={{ width: 100 }}>\r\n                                <Option value=\"\">全部</Option>\r\n                                <Option value=\"1\">北京市</Option>\r\n                                <Option value=\"2\">天津市</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"营运模式\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('opMode', {\r\n                            initialValue: '1'\r\n                        })(\r\n                            <Select style={{ width: 100 }}>\r\n                                <Option value=\"1\">自营</Option>\r\n                                <Option value=\"2\">加盟</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem label=\"用车模式\" {...formItemLayout}>\r\n                    {\r\n                        getFieldDecorator('useMode', {\r\n                            initialValue: '1'\r\n                        })(\r\n                            <Select style={{ width: 100 }}>\r\n                                <Option value=\"1\">指定停车点</Option>\r\n                                <Option value=\"2\">禁停区</Option>\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\nOpenCityForm = Form.create({})(OpenCityForm);","import React from 'react'\r\nimport { Input, Select, Form, Button, Checkbox, Radio, DatePicker} from 'antd'\r\nimport Utils from '../../utils/utils';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\n/**\r\n * 通用的过滤表格\r\n */\r\nclass FilterForm extends React.Component{\r\n\r\n    // 搜索过滤表格提交\r\n    handleFilterSubmit =()=>{\r\n        let fieldsValue = this.props.form.getFieldsValue();\r\n        this.props.filterSubmit(fieldsValue);\r\n    };\r\n\r\n    // 搜索过滤表格重置\r\n    reset = ()=>{\r\n        this.props.form.resetFields();\r\n    };\r\n\r\n    // 搜索过滤表格初始化\r\n    initFormList = ()=>{\r\n        const  { getFieldDecorator } = this.props.form;\r\n        const formList = this.props.formList;\r\n        const formItemList = [];\r\n        if(formList && formList.length > 0){\r\n            formList.forEach((item,i)=>{\r\n                let label = item.label;\r\n                let field = item.field;\r\n                let initialValue = item.initialValue || '';\r\n                let placeholder = item.placeholder;\r\n                let width = item.width;\r\n                switch (item.type) {\r\n                    case '时间查询':{\r\n                        const begin_time = <FormItem label={label} key={field+\"1\"}>\r\n                            {\r\n                                getFieldDecorator('beginTime')(\r\n                                    <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\"/>\r\n                                )\r\n                            }\r\n                        </FormItem>;\r\n                        formItemList.push(begin_time)\r\n                        const end_time = <FormItem label=\"~\" colon={false} key={field+\"2\"}>\r\n                            {\r\n                                getFieldDecorator('endTime')(\r\n                                    <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\" />\r\n                                )\r\n                            }\r\n                        </FormItem>;\r\n                        formItemList.push(end_time)\r\n                    }\r\n                        break;\r\n                    case 'INPUT':{\r\n                        const INPUT = <FormItem label={label} key={field}>\r\n                            {\r\n                                getFieldDecorator([field],{\r\n                                    initialValue: initialValue\r\n                                })(\r\n                                    <Input type=\"text\" placeholder={placeholder} />\r\n                                )\r\n                            }\r\n                        </FormItem>;\r\n                        formItemList.push(INPUT);\r\n\r\n                    }\r\n                        break;\r\n                    case 'SELECT':{\r\n                        const SELECT = <FormItem label={label} key={field}>\r\n                            {\r\n                                getFieldDecorator([field], {\r\n                                    initialValue: initialValue\r\n                                })(\r\n                                    <Select\r\n                                        style={{ width: width }}\r\n                                        placeholder={placeholder}\r\n                                    >\r\n                                        {Utils.getOptionList(item.list)}\r\n                                    </Select>\r\n                                )\r\n                            }\r\n                        </FormItem>;\r\n                        formItemList.push(SELECT);\r\n                    }\r\n                    break;\r\n                    case 'CHECKBOX':{\r\n                        const CHECKBOX = <FormItem label={label} key={field}>\r\n                            {\r\n                                getFieldDecorator([field], {\r\n                                    valuePropName: 'checked',\r\n                                    initialValue: initialValue //true | false\r\n                                })(\r\n                                    <Checkbox>\r\n                                        {label}\r\n                                    </Checkbox>\r\n                                )\r\n                            }\r\n                        </FormItem>;\r\n                        formItemList.push(CHECKBOX);\r\n                    }\r\n                        break;\r\n                    default:{\r\n\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return formItemList\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Form layout=\"inline\">\r\n                { this.initFormList() }\r\n                <FormItem>\r\n                    <Button type=\"primary\" style={{ margin: '0 20px' }} onClick={this.handleFilterSubmit}>查询</Button>\r\n                    <Button onClick={this.reset}>重置</Button>\r\n                </FormItem>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form.create({})(FilterForm);","import React from 'react';\r\nimport { Card, Button, Table, Form, Select, Modal, DatePicker, message} from 'antd'\r\nimport axios from '../../axios'\r\nimport Utils from '../../utils/utils'\r\nimport BaseForm from '../../components/BaseForm'\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nexport default class Order extends React.Component{\r\n\r\n    state  = {\r\n        orderInfo:{},\r\n        orderConfirmVisible:false\r\n    };\r\n\r\n    params = {\r\n        page: 1\r\n    };\r\n    formList = [\r\n        {\r\n            type:'SELECT',\r\n            label:'城市',\r\n            field:'city',\r\n            placeholder:'全部',\r\n            initialValue:'1',\r\n            width:80,\r\n            list: Utils.getCityList()\r\n        },\r\n        {\r\n            type: '时间查询',\r\n            label:\"开始时间\"\r\n        },\r\n        {\r\n            type: 'SELECT',\r\n            label: '订单状态',\r\n            field:'orderStatus',\r\n            placeholder: '全部',\r\n            initialValue: '1',\r\n            width: 80,\r\n            list: Utils.getOrderStatusList()\r\n        }\r\n    ];\r\n\r\n    componentDidMount(){\r\n        this.requestList()\r\n    }\r\n\r\n    handleFilter = (params)=>{\r\n        this.params = params;\r\n        this.requestList();\r\n    };\r\n\r\n    // 默认请求我们的接口数据\r\n    requestList = ()=>{\r\n        let _this = this;\r\n        axios.ajax({\r\n            url:'/order',\r\n            method:'GET',\r\n            params:{\r\n                page:this.params\r\n            },\r\n            data:{\r\n                isShowLoading:true\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code == '0'){\r\n                let list = res.data.result.map((item,index)=>{\r\n                    item.key = index;\r\n                    return item;\r\n                });\r\n                this.setState({\r\n                    list,\r\n                    pagination: Utils.pagination(res,(current,pageSize)=>{\r\n                        _this.params.page = current;\r\n                        _this.params.pageSize = pageSize;\r\n                        this.requestList();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    };\r\n\r\n    // 返回选中的一行\r\n    checkSelectItem =()=>{\r\n        let item = this.state.selectedItem;\r\n        if (!item) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请先选择一条订单'\r\n            });\r\n            return;\r\n        }\r\n        return item;\r\n    };\r\n\r\n    // 打开订单详情页面\r\n    openOrderDetail = ()=>{\r\n        let item = this.state.selectedItem;\r\n        if (!item) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请先选择一条订单'\r\n            });\r\n            return;\r\n        };\r\n        window.open(`/#/common/order/detail/${item.id}`,'_blank')\r\n    };\r\n\r\n    // 订单结束确认\r\n    handleConfirm = ()=>{\r\n        let item = this.state.selectedItem;\r\n        if (!item) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请先选择一条订单'\r\n            });\r\n            return;\r\n        };\r\n        axios.ajax({\r\n            url:'/order/stop',\r\n            method:'PUT',\r\n            data:{\r\n                orderId: item.id\r\n            }\r\n        }).then((res)=> {\r\n            if (res.code == '0') {\r\n                this.setState({\r\n                    orderInfo:res.data,\r\n                    orderConfirmVisble: true\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    // 结束订单\r\n    handleFinishOrder = ()=>{\r\n        let item = this.state.selectedItem;\r\n        axios.ajax({\r\n            url: '/order/finishorder',\r\n            method:'PUT',\r\n            data:{\r\n                orderId: item.id\r\n            }\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                message.success('订单结束成功')\r\n                this.setState({\r\n                    orderConfirmVisble: false\r\n                })\r\n                this.requestList();\r\n            }\r\n        })\r\n    }\r\n\r\n    onRowClick = (record, index) => {\r\n        let selectKey = [index];\r\n        this.setState({\r\n            selectedRowKeys: selectKey,\r\n            selectedItem: record\r\n        });\r\n    };\r\n\r\n    handleModify =(item) =>{\r\n        let id = item.id;\r\n        Modal.confirm({\r\n            title:\"修改\",\r\n            content:\"你确认要修改此条数据吗？\",\r\n            onOk:()=>{\r\n                message.success('修改成功！');\r\n                this.requestList();\r\n            }\r\n        })\r\n    };\r\n\r\n    handleDelete =(item) =>{\r\n        let id = item.id;\r\n        Modal.confirm({\r\n            title:\"确认\",\r\n            content:\"你确认要删除此条数据吗？\",\r\n            onOk:()=>{\r\n                message.success('删除成功！');\r\n                this.requestList();\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title:'订单编号',\r\n                dataIndex:'orderSn'\r\n            },\r\n            {\r\n                title: '车辆编号',\r\n                dataIndex: 'bikeSn'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'userName'\r\n            },\r\n            {\r\n                title: '手机号',\r\n                dataIndex: 'mobile'\r\n            },\r\n            {\r\n                title: '里程',\r\n                dataIndex: 'distance',\r\n                render(distance){\r\n                    return distance/1000 + 'Km';\r\n                }\r\n            },\r\n            {\r\n                title: '行驶时长',\r\n                dataIndex: 'totalTime'\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'status',\r\n                render(value){\r\n                    return Utils.orderStatusDic(value);\r\n                }\r\n            },\r\n            {\r\n                title: '开始时间',\r\n                dataIndex: 'startTime'\r\n            },\r\n            {\r\n                title: '结束时间',\r\n                dataIndex: 'endTime'\r\n            },\r\n            {\r\n                title: '订单金额',\r\n                dataIndex: 'totalFee'\r\n            },\r\n            {\r\n                title: '实付金额',\r\n                dataIndex: 'userPay'\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text,item) => (\r\n                    <span>\r\n                        <Button size=\"small\" type=\"primary\" onClick={(item)=> {this.handleModify(item)}}>编辑</Button>\r\n                        <Button size=\"small\" type=\"danger\" onClick={(item)=> {this.handleDelete(item)}}>删除</Button>\r\n                     </span>\r\n                ),\r\n            },\r\n        ];\r\n\r\n        const formItemLayout = {\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:19}\r\n        };\r\n        const selectedRowKeys = this.state.selectedRowKeys;\r\n        const rowSelection = {\r\n            type: 'radio',\r\n            selectedRowKeys\r\n        };\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <BaseForm formList={this.formList} filterSubmit={this.handleFilter}/>\r\n                </Card>\r\n                <Card style={{marginTop:10}}>\r\n                    <Button type=\"primary\" onClick={this.openOrderDetail}>订单详情</Button>\r\n                    <Button type=\"primary\" style={{marginLeft:10}} onClick={this.handleConfirm}>结束订单</Button>\r\n                </Card>\r\n                <div className=\"content-wrap\">\r\n                    <Table\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        pagination={this.state.pagination}\r\n                        rowSelection={rowSelection}\r\n                        onRow={(record, index) => {\r\n                            return {\r\n                                onClick: () => {\r\n                                    this.onRowClick(record, index);\r\n                                }\r\n                            };\r\n                        }}\r\n                    />\r\n                </div>\r\n                <Modal\r\n                    title=\"结束订单\"\r\n                    visible={this.state.orderConfirmVisble}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            orderConfirmVisble:false\r\n                        })\r\n                    }}\r\n                    onOk={this.handleFinishOrder}\r\n                    width={600}\r\n                >\r\n                    <Form layout=\"horizontal\">\r\n                        <FormItem label=\"车辆编号\" {...formItemLayout}>\r\n                            {this.state.orderInfo.bikeSn}\r\n                        </FormItem>\r\n                        <FormItem label=\"剩余电量\" {...formItemLayout}>\r\n                            {this.state.orderInfo.battery + '%'}\r\n                        </FormItem>\r\n                        <FormItem label=\"行程开始时间\" {...formItemLayout}>\r\n                            {this.state.orderInfo.startTime}\r\n                        </FormItem>\r\n                        <FormItem label=\"当前位置\" {...formItemLayout}>\r\n                            {this.state.orderInfo.location}\r\n                        </FormItem>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { HashRouter, Route, Switch, Redirect} from 'react-router-dom'\r\nimport App from './App'\r\nimport Login from './pages/login'\r\nimport Common from './common'\r\nimport OrderDetail from './pages/order/detail'\r\nimport Admin from \"./admin\";\r\nimport Home from \"./pages/home\";\r\nimport Gallery from \"./pages/ui/gallery\";\r\nimport FormLogin from \"./pages/form/login\";\r\nimport FormRegister from \"./pages/form/register\";\r\nimport HighTable from \"./pages/table/highTable\";\r\nimport BasicTable from \"./pages/table/basicTable\";\r\nimport City from \"./pages/city\";\r\nimport Order from \"./pages/order\";\r\n\r\nexport default class ERouter extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <App>\r\n                    <Switch>\r\n                        <Route path=\"/login\" component={Login}/>\r\n                        <Route path=\"/common\" render={ ()=>\r\n                            <Common>\r\n                                <Route path=\"/common/order/detail/:orderId\" component={OrderDetail} />\r\n                            </Common>\r\n                        }/>\r\n                        <Route path=\"/\" render={()=>\r\n                            <Admin>\r\n                                <Switch>\r\n                                    <Route path=\"/home\" component={Home}/>\r\n                                    <Route path=\"/ui/gallery\" component={Gallery} />\r\n                                    <Route path=\"/form/login\" component={FormLogin} />\r\n                                    <Route path=\"/form/reg\" component={FormRegister} />\r\n                                    <Route path=\"/table/basic\" component={BasicTable} />\r\n                                    <Route path=\"/table/high\" component={HighTable} />\r\n                                    <Route path=\"/city\" component={City} />\r\n                                    <Route path=\"/order\" component={Order} />\r\n                                    <Redirect to=\"/home\" />\r\n                                </Switch>\r\n                            </Admin>\r\n                        }/>\r\n                    </Switch>\r\n                </App>\r\n            </HashRouter>\r\n        );\r\n    };\r\n\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Router from './router'\nimport * as serviceWorker from './serviceWorker';\nimport Router from \"./router\";\n\nReactDOM.render(\n    <Router />,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}